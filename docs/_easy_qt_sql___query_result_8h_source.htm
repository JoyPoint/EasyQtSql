<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>EasyQtSql: EasyQtSql/EasyQtSql_QueryResult.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">EasyQtSql
   </div>
   <div id="projectbrief">Easy SQL data access helper for QtSql</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_easy_qt_sql___query_result_8h_source.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">EasyQtSql_QueryResult.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_easy_qt_sql___query_result_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef EASYQTSQL_QUERYRESULT_H</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define EASYQTSQL_QUERYRESULT_H</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * The MIT License (MIT)</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Copyright 2018 Alexey Kramin</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * a copy of this software and associated documentation files (the</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * &quot;Software&quot;), to deal in the Software without restriction, including</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * without limitation the rights to use, copy, modify, merge, publish,</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * distribute, sublicense, and/or sell copies of the Software, and to</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * permit persons to whom the Software is furnished to do so, subject to</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * the following conditions:</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * included in all copies or substantial portions of the Software.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"> * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment"> * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">*/</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#ifndef EASY_QT_SQL_MAIN</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;QtSql&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_easy_qt_sql___non_query_result_8h.htm">EasyQtSql_NonQueryResult.h</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="class_query_result.htm">   39</a></span>&#160;<span class="keyword">class  </span><a class="code" href="class_query_result.htm">QueryResult</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="class_query_result.htm#a6efef52d7a939622bbc934ff6b90ffe0">   41</a></span>&#160;   <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="class_database.htm">Database</a>;</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="class_query_result.htm#a49982aa325e19f0956d42fde9132caa2">   42</a></span>&#160;   <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="class_transaction.htm">Transaction</a>;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="class_query_result.htm#a86948d67f912f2e3e6d1a2674cd0814e">   43</a></span>&#160;   <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="class_prepared_query.htm">PreparedQuery</a>;   </div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="class_query_result.htm#afcffce24fb54a5b94c74d304a36fc317">   50</a></span>&#160;   QSqlQuery &amp;<a class="code" href="class_query_result.htm#afcffce24fb54a5b94c74d304a36fc317">unwrappedQuery</a>()</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;   {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordflow">return</span> m_query;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;   }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="class_query_result.htm#a1c756382c20c126979b28715d529c054">   60</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="class_query_result.htm#a1c756382c20c126979b28715d529c054">next</a>()</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;   {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="keywordtype">bool</span> res = m_query.next();</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="keywordflow">if</span> ( ! m_firstRowFetched)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;         m_fieldNames.clear();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;         QSqlRecord record = m_query.record();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;         <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; record.count(); ++i)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;         {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            m_fieldNames.append(record.fieldName(i));</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;         }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;         m_firstRowFetched = <span class="keyword">true</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;   }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="class_query_result.htm#a9325bfaca721378e6bafa50fd7839197">   86</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="class_query_result.htm#a9325bfaca721378e6bafa50fd7839197">previous</a>()</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;   {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordflow">return</span> m_query.previous();</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;   }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="class_query_result.htm#a9ed922784c015b27b7fb53fafb10b391">   96</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="class_query_result.htm#a9ed922784c015b27b7fb53fafb10b391">nextResult</a>()</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;   {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      m_firstRowFetched = <span class="keyword">false</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">bool</span> res = m_query.nextResult();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;   }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="class_query_result.htm#a406abd3501b2f3d89bf6bb7e5e8cd7c3">  110</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="class_query_result.htm#a406abd3501b2f3d89bf6bb7e5e8cd7c3">first</a>()</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;   {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="keywordflow">return</span> m_query.first();</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;   }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="class_query_result.htm#a0e5a5d108da1d03b0f624e18330a10f5">  120</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="class_query_result.htm#a0e5a5d108da1d03b0f624e18330a10f5">last</a>()</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;   {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="keywordflow">return</span> m_query.last();</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;   }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="class_query_result.htm#aff65a998f1c8be8c1dd630438a820158">  130</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="class_query_result.htm#aff65a998f1c8be8c1dd630438a820158">seek</a>(<span class="keywordtype">int</span> index, <span class="keywordtype">bool</span> relative = <span class="keyword">false</span>)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;   {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordflow">return</span> m_query.seek(index, relative);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;   }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="class_query_result.htm#af49cf244de53dd4340b486990f38c553">  141</a></span>&#160;   <span class="keywordtype">int</span> <a class="code" href="class_query_result.htm#af49cf244de53dd4340b486990f38c553">at</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      <span class="keywordflow">return</span> m_query.at();</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;   }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="class_query_result.htm#a46b374177ab23d8f9d7dc9366eb57655">  151</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="class_query_result.htm#a46b374177ab23d8f9d7dc9366eb57655">isActive</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordflow">return</span> m_query.isActive();</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;   }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="class_query_result.htm#ae9ec64a1171aba3f7cef8b081c8158be">  161</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="class_query_result.htm#ae9ec64a1171aba3f7cef8b081c8158be">isValid</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <span class="keywordflow">return</span> m_query.isValid();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;   }</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="class_query_result.htm#a5b6ef75a4da642c0c467d0110ce1701a">  171</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="class_query_result.htm#a5b6ef75a4da642c0c467d0110ce1701a">isForwardOnly</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;      <span class="keywordflow">return</span> m_query.isForwardOnly();</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;   }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="class_query_result.htm#ad46ba52de7f43f45c19d4b7eecabca4b">  181</a></span>&#160;   <span class="keywordtype">int</span> <a class="code" href="class_query_result.htm#ad46ba52de7f43f45c19d4b7eecabca4b">size</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      <span class="keywordflow">return</span> m_query.size();</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;   }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="class_query_result.htm#a26baf17cd661ec312918f660ac9e4b1a">  191</a></span>&#160;   <span class="keywordtype">int</span> <a class="code" href="class_query_result.htm#a26baf17cd661ec312918f660ac9e4b1a">numRowsAffected</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="keywordflow">return</span> m_query.numRowsAffected();</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;   }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="class_query_result.htm#ac56dbe38b558a9e55591f645d50eacde">  201</a></span>&#160;   QSqlError <a class="code" href="class_query_result.htm#ac56dbe38b558a9e55591f645d50eacde">lastError</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="keywordflow">return</span> m_query.lastError();</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;   }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="class_query_result.htm#af86eb1e97db39a70d504389494e2b329">  211</a></span>&#160;   QString <a class="code" href="class_query_result.htm#af86eb1e97db39a70d504389494e2b329">lastQuery</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keywordflow">return</span> m_query.lastQuery();</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;   }</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="class_query_result.htm#abfc27e5ad56a2da113bdb804b3fd682c">  221</a></span>&#160;   QString <a class="code" href="class_query_result.htm#abfc27e5ad56a2da113bdb804b3fd682c">executedQuery</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      <span class="keywordflow">return</span> m_query.executedQuery();</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;   }</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">  231</a></span>&#160;   QVariant <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>(<span class="keywordtype">int</span> column)<span class="keyword"> const</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordflow">return</span> m_query.value(column);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;   }</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="class_query_result.htm#a90ec24d07326aaa31e5372cfa377c985">  241</a></span>&#160;   QVariant <a class="code" href="class_query_result.htm#a90ec24d07326aaa31e5372cfa377c985">value</a>(<span class="keyword">const</span> QString &amp;colName)<span class="keyword"> const</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;      <span class="keywordflow">return</span> m_query.value(colName);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;   }</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="class_query_result.htm#ad09b4730fecad00984e32e7f3defa76e">  251</a></span>&#160;   QVariant <a class="code" href="class_query_result.htm#ad09b4730fecad00984e32e7f3defa76e">boundValue</a>(<span class="keywordtype">int</span> column)<span class="keyword"> const</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;      <span class="keywordflow">return</span> m_query.boundValue(column);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;   }</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="class_query_result.htm#a9e9ea76bfa4a3770e0ea885c797b5729">  265</a></span>&#160;   QVariant <a class="code" href="class_query_result.htm#a9e9ea76bfa4a3770e0ea885c797b5729">boundValue</a>(<span class="keyword">const</span> QString &amp;aliasName)<span class="keyword"> const</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> index = m_bindValueAlias.value(aliasName.trimmed().toLower(), -1);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      QVariant res;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      <span class="keywordflow">if</span> (index &gt;= 0)</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;      {</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;         res = <a class="code" href="class_query_result.htm#ad09b4730fecad00984e32e7f3defa76e">boundValue</a>(index);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      }</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;   }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno"><a class="line" href="class_query_result.htm#a540f4948af295e336c58a6fe30e48c0b">  284</a></span>&#160;   QVariantList <a class="code" href="class_query_result.htm#a540f4948af295e336c58a6fe30e48c0b">boundValues</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;      QList&lt;QVariant&gt; list = m_query.boundValues().values();</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      <span class="keywordflow">return</span> list;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;   }</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="class_query_result.htm#a023bd84f7010368d616d7dbb1b399a06">  295</a></span>&#160;   QVariantMap <a class="code" href="class_query_result.htm#a023bd84f7010368d616d7dbb1b399a06">toMap</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;      QVariantMap res;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;      <a class="code" href="class_query_result.htm#a0f79c838a9fcd4a5d48e61abc79612e9">fetchMap</a>(res);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;   }</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="class_query_result.htm#aa1595196bd3fd72c9ee95c6c0a82f711">  308</a></span>&#160;   QVariantList <a class="code" href="class_query_result.htm#aa1595196bd3fd72c9ee95c6c0a82f711">toList</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;      QVariantList res;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      <a class="code" href="class_query_result.htm#af62abbe3a59c25163c90e4a5fec632c7">fetchList</a>(res);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;      <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;   }</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="class_query_result.htm#a6831da3d942ccf741984f72d1d2eb57d">  321</a></span>&#160;   QStringList <a class="code" href="class_query_result.htm#a6831da3d942ccf741984f72d1d2eb57d">toStringList</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      QStringList res;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;      <a class="code" href="class_query_result.htm#af49aaa8a26876c7a095326c8b2d5ba6a">fetchStringList</a>(res);</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;      <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;   }</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="class_query_result.htm#a9bebffe22ed2f023ef7c9540aa9164ea">  334</a></span>&#160;   QVector&lt;QVariant&gt; <a class="code" href="class_query_result.htm#a9bebffe22ed2f023ef7c9540aa9164ea">toVector</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;      QVector&lt;QVariant&gt; res;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      <a class="code" href="class_query_result.htm#ad111370ab183d4d6a1522123c03f183d">fetchVector</a>(res);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;      <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;   }</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="class_query_result.htm#aa4f8c874ffb9e6b1285a69322aec61ea">  350</a></span>&#160;   QVector&lt;T&gt; <a class="code" href="class_query_result.htm#aa4f8c874ffb9e6b1285a69322aec61ea">toVector</a>(<span class="keywordtype">bool</span> skipNullValues = <span class="keyword">false</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;      QVector&lt;T&gt; res;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;      res.reserve(m_fieldNames.count());</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; m_fieldNames.count(); ++i)</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;      {</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;         <span class="keyword">const</span> QVariant &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(i);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;         <span class="keywordflow">if</span> (!<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>.canConvert&lt;T&gt;())</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;         <span class="keywordflow">if</span> (skipNullValues &amp;&amp; <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>.isNull())</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;         res.append(<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>.value&lt;T&gt;());</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;      }</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;      <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;   }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno"><a class="line" href="class_query_result.htm#a22bd0f401bbcc203adb03b874ef2c5d8">  381</a></span>&#160;   QVector&lt;int&gt; <a class="code" href="class_query_result.htm#a22bd0f401bbcc203adb03b874ef2c5d8">parseToIntVector</a>(<span class="keywordtype">int</span> base = 10, <span class="keywordtype">bool</span> skipNullValues = <span class="keyword">false</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;      QVector&lt;int&gt; res;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;      res.reserve(m_fieldNames.count());</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; m_fieldNames.count(); ++i)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;      {</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;         <span class="keyword">const</span> QVariant &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(i);</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;         <span class="keywordflow">if</span> (!<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>.canConvert&lt;<span class="keywordtype">int</span>&gt;())</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;         <span class="keywordflow">if</span> (skipNullValues &amp;&amp; <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>.isNull())</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;         <span class="keywordtype">bool</span> ok = <span class="keyword">false</span>;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;         <span class="keywordtype">int</span> iValue = 0;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;         <span class="keywordflow">if</span> ( ((<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>.type() == QVariant::String) || (<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>.type() == QVariant::ByteArray)))</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;         {</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            <span class="keyword">const</span> QString str = <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>.toString();</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            iValue = str.toInt(&amp;ok, base);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;         }</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;         <span class="keywordflow">else</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;         {</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            iValue = <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>.toInt(&amp;ok);</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;         }</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;         <span class="keywordflow">if</span> (ok)</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;         {</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            res.append(iValue);</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;         }</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;      }</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;      <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;   }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00424"></a><span class="lineno"><a class="line" href="class_query_result.htm#a5e3b49cb821efecac406606d9e3adb13">  424</a></span>&#160;   T <a class="code" href="class_query_result.htm#a5e3b49cb821efecac406606d9e3adb13">scalar</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;      <span class="keywordflow">return</span> m_query.value(0).value&lt;T&gt;();</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;   }</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno"><a class="line" href="class_query_result.htm#abd683e71de31fbcf8e74e22249597322">  432</a></span>&#160;   QVariant <a class="code" href="class_query_result.htm#abd683e71de31fbcf8e74e22249597322">scalar</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;      <span class="keywordflow">return</span> m_query.value(0);</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;   }</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno"><a class="line" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">  473</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(<span class="keywordtype">int</span> &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex).toInt();</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;      m_fetchIndex = 0;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;   }</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno"><a class="line" href="class_query_result.htm#ac77eccf0a47750e309e11e7e66bb2d8a">  485</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#ac77eccf0a47750e309e11e7e66bb2d8a">fetchVars</a>(<span class="keywordtype">double</span> &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex).toInt();</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;      m_fetchIndex = 0;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;   }</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno"><a class="line" href="class_query_result.htm#a1a43faec4675b58bd0506a4de7c3976f">  497</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a1a43faec4675b58bd0506a4de7c3976f">fetchVars</a>(QString &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex).toString();</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;      m_fetchIndex = 0;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;   }</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00509"></a><span class="lineno"><a class="line" href="class_query_result.htm#af49ff273eb3efd184ca423df846ba507">  509</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#af49ff273eb3efd184ca423df846ba507">fetchVars</a>(<span class="keywordtype">bool</span> &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex).toBool();</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;      m_fetchIndex = 0;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;   }</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno"><a class="line" href="class_query_result.htm#a50a5fa4850f774f301ed88a488a44726">  521</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a50a5fa4850f774f301ed88a488a44726">fetchVars</a>(QDate &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex).toDate();</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      m_fetchIndex = 0;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;   }</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno"><a class="line" href="class_query_result.htm#a91d15081bc1d6eccefe089f4948438cb">  533</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a91d15081bc1d6eccefe089f4948438cb">fetchVars</a>(QDateTime &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex).toDateTime();</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;      m_fetchIndex = 0;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;   }</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00545"></a><span class="lineno"><a class="line" href="class_query_result.htm#af2870c71cd1b750c8151a7b4420903fa">  545</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#af2870c71cd1b750c8151a7b4420903fa">fetchVars</a>(QTime &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex).toTime();</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;      m_fetchIndex = 0;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;   }</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno"><a class="line" href="class_query_result.htm#aaeb262416e472885dc6a3c7c3c7c3306">  557</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#aaeb262416e472885dc6a3c7c3c7c3306">fetchVars</a>(QByteArray &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex).toByteArray();</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;      m_fetchIndex = 0;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;   }</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno"><a class="line" href="class_query_result.htm#a8c17bed4e4380137912a2baba19e5a30">  569</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a8c17bed4e4380137912a2baba19e5a30">fetchVars</a>(QVariant &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>)<span class="keyword"> const</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex);</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;      m_fetchIndex = 0;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;   }</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno"><a class="line" href="class_query_result.htm#a5421dce74a177933675ede65a68972a0">  576</a></span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Rest&gt; <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a5421dce74a177933675ede65a68972a0">fetchVars</a>(<span class="keywordtype">int</span> &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest&amp;... rest)<span class="keyword"> const</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex++).toInt();</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;      <a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(rest...);</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;   }</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno"><a class="line" href="class_query_result.htm#a0b82a02ab7a45f1092e93d56a87dc67b">  583</a></span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Rest&gt; <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a0b82a02ab7a45f1092e93d56a87dc67b">fetchVars</a>(<span class="keywordtype">double</span> &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest&amp;... rest)<span class="keyword"> const</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex++).toDouble();</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;      <a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(rest...);</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;   }</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00590"></a><span class="lineno"><a class="line" href="class_query_result.htm#acf30d6c095e00eb7b1bc942563597d4b">  590</a></span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Rest&gt; <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#acf30d6c095e00eb7b1bc942563597d4b">fetchVars</a>(QString &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest&amp;... rest)<span class="keyword"> const</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex++).toString();</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;      <a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(rest...);</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;   }</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno"><a class="line" href="class_query_result.htm#aa62c42135a62658a7e56426a024d0146">  597</a></span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Rest&gt; <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#aa62c42135a62658a7e56426a024d0146">fetchVars</a>(<span class="keywordtype">bool</span> &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest&amp;... rest)<span class="keyword"> const</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex++).toBool();</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;      <a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(rest...);</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;   }</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div><div class="line"><a name="l00604"></a><span class="lineno"><a class="line" href="class_query_result.htm#aadabff776f939dd7c3895318396ae59e">  604</a></span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Rest&gt; <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#aadabff776f939dd7c3895318396ae59e">fetchVars</a>(QDate &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest&amp;... rest)<span class="keyword"> const</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex++).toDate();</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;      <a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(rest...);</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;   }</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno"><a class="line" href="class_query_result.htm#aab68396b876b689f21109301cf350ee3">  611</a></span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Rest&gt; <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#aab68396b876b689f21109301cf350ee3">fetchVars</a>(QDateTime &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest&amp;... rest)<span class="keyword"> const</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex++).toDateTime();</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;      <a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(rest...);</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;   }</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno"><a class="line" href="class_query_result.htm#a462dc42f451155eca3b56b9239cf8535">  618</a></span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Rest&gt; <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a462dc42f451155eca3b56b9239cf8535">fetchVars</a>(QTime &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest&amp;... rest)<span class="keyword"> const</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex++).toTime();</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;      <a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(rest...);</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;   }</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno"><a class="line" href="class_query_result.htm#a5efedd7a6e170ddeaddbac5428951085">  625</a></span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Rest&gt; <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a5efedd7a6e170ddeaddbac5428951085">fetchVars</a>(QByteArray &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest&amp;... rest)<span class="keyword"> const</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex++).toByteArray();</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;      <a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(rest...);</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;   }</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno"><a class="line" href="class_query_result.htm#a0a381517b5fa64a68e4d10972b0ceefc">  632</a></span>&#160;   <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Rest&gt; <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a0a381517b5fa64a68e4d10972b0ceefc">fetchVars</a>(QVariant &amp;<a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest&amp;... rest)<span class="keyword"> const</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;      <a class="code" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> = m_query.value(m_fetchIndex++);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;      <a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(rest...);</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;   }</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div><div class="line"><a name="l00686"></a><span class="lineno"><a class="line" href="class_query_result.htm#a79a40fde15ca3ceaa4f0c7b8ba649558">  686</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a79a40fde15ca3ceaa4f0c7b8ba649558">fetchObject</a>(QObject &amp;<span class="keywordtype">object</span>)<span class="keyword"> const</span></div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;      <span class="keyword">const</span> QMetaObject *metaobject = <span class="keywordtype">object</span>.metaObject();</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> count = metaobject-&gt;propertyCount();</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;      <span class="keyword">const</span> QVariantMap map = <a class="code" href="class_query_result.htm#a023bd84f7010368d616d7dbb1b399a06">toMap</a>();</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; count; ++i)</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;      {</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;         QMetaProperty metaproperty = metaobject-&gt;property(i);</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;         <span class="keywordflow">if</span> (metaproperty.isWritable())</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;         {</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;            QLatin1String sName(metaproperty.name());</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            <span class="keywordflow">if</span> (map.contains(sName))</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;            {</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;               <span class="keywordtype">object</span>.setProperty(sName.data(), map.value(sName));</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;            }</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;         }</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;      }</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;   }</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;   <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00758"></a><span class="lineno"><a class="line" href="class_query_result.htm#a53a94d8a3a9ca6916716d79b5fb48837">  758</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a53a94d8a3a9ca6916716d79b5fb48837">fetchGadget</a>(T &amp;gadget)<span class="keyword"> const</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;      <span class="keyword">const</span> QMetaObject &amp;metaobject = gadget.staticMetaObject;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">int</span> count = metaobject.propertyCount();</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;      <span class="keyword">const</span> QVariantMap map = <a class="code" href="class_query_result.htm#a023bd84f7010368d616d7dbb1b399a06">toMap</a>();</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; count; ++i)</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;      {</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;         QMetaProperty metaproperty = metaobject.property(i);</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;         <span class="keywordflow">if</span> (metaproperty.isWritable())</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;         {</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;            QLatin1String sName(metaproperty.name());</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            <span class="keywordflow">if</span> (map.contains(sName))</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            {</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;               metaproperty.writeOnGadget(&amp;gadget, map.value(sName));</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;            }</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;         }</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;      }</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;   }</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno"><a class="line" href="class_query_result.htm#a0f79c838a9fcd4a5d48e61abc79612e9">  787</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#a0f79c838a9fcd4a5d48e61abc79612e9">fetchMap</a>(QVariantMap &amp;map)<span class="keyword"> const</span></div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;      map.clear();</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; m_fieldNames.count(); ++i)</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;      {</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;         map.insert(m_fieldNames.at(i), m_query.value(i));</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;      }</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;   }</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div><div class="line"><a name="l00802"></a><span class="lineno"><a class="line" href="class_query_result.htm#af62abbe3a59c25163c90e4a5fec632c7">  802</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#af62abbe3a59c25163c90e4a5fec632c7">fetchList</a>(QVariantList &amp;list)<span class="keyword"> const</span></div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;      list.clear();</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; m_fieldNames.count(); ++i)</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;      {</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;         list.append(m_query.value(i));</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;      }</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;   }</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00817"></a><span class="lineno"><a class="line" href="class_query_result.htm#ad111370ab183d4d6a1522123c03f183d">  817</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#ad111370ab183d4d6a1522123c03f183d">fetchVector</a>(QVector&lt;QVariant&gt; &amp;vector)<span class="keyword"> const</span></div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;      vector.clear();</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;      vector.reserve(m_fieldNames.count());</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; m_fieldNames.count(); ++i)</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;      {</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;         vector.append(m_query.value(i));</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;      }</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;   }</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00833"></a><span class="lineno"><a class="line" href="class_query_result.htm#af49aaa8a26876c7a095326c8b2d5ba6a">  833</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="class_query_result.htm#af49aaa8a26876c7a095326c8b2d5ba6a">fetchStringList</a>(QStringList &amp;list)<span class="keyword"> const</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;<span class="keyword">   </span>{</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;      list.clear();</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; m_fieldNames.count(); ++i)</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;      {</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;         list.append(m_query.value(i).toString());</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;      }</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;   }</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;   <a class="code" href="class_query_result.htm">QueryResult</a>()</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;   { }</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;   <span class="keyword">explicit</span> <a class="code" href="class_query_result.htm">QueryResult</a>(<span class="keyword">const</span> QSqlQuery &amp;query)</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;    : m_query(query)</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;   { }</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;   <a class="code" href="class_query_result.htm">QueryResult</a>(<span class="keyword">const</span> QSqlQuery &amp;query, <span class="keyword">const</span> QMap&lt;QString, int&gt; &amp;bindValueAliasMap)</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    : m_query(query)</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    , m_bindValueAlias(bindValueAliasMap)</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;   { }</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;   QSqlQuery   m_query;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;   QStringList m_fieldNames;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;   QMap&lt;QString, int&gt; m_bindValueAlias;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;   <span class="keyword">mutable</span> <span class="keywordtype">int</span> m_fetchIndex = 0;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;   <span class="keywordtype">bool</span> m_firstRowFetched = <span class="keyword">false</span>;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;};</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;<span class="preprocessor">#endif // EASYQTSQL_QUERYRESULT_H</span></div><div class="ttc" id="class_query_result_htm_a9325bfaca721378e6bafa50fd7839197"><div class="ttname"><a href="class_query_result.htm#a9325bfaca721378e6bafa50fd7839197">QueryResult::previous</a></div><div class="ttdeci">bool previous()</div><div class="ttdoc">Retrieves the previous record in the result, if available, and positions the query on the retrieved r...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:86</div></div>
<div class="ttc" id="class_query_result_htm_ac77eccf0a47750e309e11e7e66bb2d8a"><div class="ttname"><a href="class_query_result.htm#ac77eccf0a47750e309e11e7e66bb2d8a">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(double &amp;value) const</div><div class="ttdoc">Assigns a variable the value from the current record. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:485</div></div>
<div class="ttc" id="class_query_result_htm_ac56dbe38b558a9e55591f645d50eacde"><div class="ttname"><a href="class_query_result.htm#ac56dbe38b558a9e55591f645d50eacde">QueryResult::lastError</a></div><div class="ttdeci">QSqlError lastError() const</div><div class="ttdoc">Returns error information about the last error (if any) that occurred with this query. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:201</div></div>
<div class="ttc" id="class_query_result_htm_a9bebffe22ed2f023ef7c9540aa9164ea"><div class="ttname"><a href="class_query_result.htm#a9bebffe22ed2f023ef7c9540aa9164ea">QueryResult::toVector</a></div><div class="ttdeci">QVector&lt; QVariant &gt; toVector() const</div><div class="ttdoc">Returns QVector&lt;QVariant&gt; filled with values fetched from current result row. SQL values not converte...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:334</div></div>
<div class="ttc" id="class_query_result_htm_ad111370ab183d4d6a1522123c03f183d"><div class="ttname"><a href="class_query_result.htm#ad111370ab183d4d6a1522123c03f183d">QueryResult::fetchVector</a></div><div class="ttdeci">void fetchVector(QVector&lt; QVariant &gt; &amp;vector) const</div><div class="ttdoc">Fills QVector&lt;QVariant&gt; with values fetched from current result row. SQL values not converted: QSqlQu...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:817</div></div>
<div class="ttc" id="class_prepared_query_htm"><div class="ttname"><a href="class_prepared_query.htm">PreparedQuery</a></div><div class="ttdoc">Class for query preparation and execution. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_PreparedQuery.h:63</div></div>
<div class="ttc" id="class_query_result_htm_abd683e71de31fbcf8e74e22249597322"><div class="ttname"><a href="class_query_result.htm#abd683e71de31fbcf8e74e22249597322">QueryResult::scalar</a></div><div class="ttdeci">QVariant scalar() const</div><div class="ttdoc">Returns scalar value (the value of the first column of the current row) </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:432</div></div>
<div class="ttc" id="class_query_result_htm_a8c17bed4e4380137912a2baba19e5a30"><div class="ttname"><a href="class_query_result.htm#a8c17bed4e4380137912a2baba19e5a30">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QVariant &amp;value) const</div><div class="ttdoc">Assigns a variable the value from the current record. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:569</div></div>
<div class="ttc" id="class_query_result_htm_ae9ec64a1171aba3f7cef8b081c8158be"><div class="ttname"><a href="class_query_result.htm#ae9ec64a1171aba3f7cef8b081c8158be">QueryResult::isValid</a></div><div class="ttdeci">bool isValid() const</div><div class="ttdoc">Returns true if the query is currently positioned on a valid record; otherwise returns false...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:161</div></div>
<div class="ttc" id="class_query_result_htm_a5e3b49cb821efecac406606d9e3adb13"><div class="ttname"><a href="class_query_result.htm#a5e3b49cb821efecac406606d9e3adb13">QueryResult::scalar</a></div><div class="ttdeci">T scalar() const</div><div class="ttdoc">Returns scalar value converted to type T (the value of the first column of the current row) ...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:424</div></div>
<div class="ttc" id="class_query_result_htm_a22bd0f401bbcc203adb03b874ef2c5d8"><div class="ttname"><a href="class_query_result.htm#a22bd0f401bbcc203adb03b874ef2c5d8">QueryResult::parseToIntVector</a></div><div class="ttdeci">QVector&lt; int &gt; parseToIntVector(int base=10, bool skipNullValues=false) const</div><div class="ttdoc">Returns vector of (optionally parsed) integer values from currently active result row...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:381</div></div>
<div class="ttc" id="class_query_result_htm_a9e9ea76bfa4a3770e0ea885c797b5729"><div class="ttname"><a href="class_query_result.htm#a9e9ea76bfa4a3770e0ea885c797b5729">QueryResult::boundValue</a></div><div class="ttdeci">QVariant boundValue(const QString &amp;aliasName) const</div><div class="ttdoc">Returns the value for the placeholder with aliasName. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:265</div></div>
<div class="ttc" id="class_query_result_htm_afcffce24fb54a5b94c74d304a36fc317"><div class="ttname"><a href="class_query_result.htm#afcffce24fb54a5b94c74d304a36fc317">QueryResult::unwrappedQuery</a></div><div class="ttdeci">QSqlQuery &amp; unwrappedQuery()</div><div class="ttdoc">Returns reference on wrapped QSqlQuery. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:50</div></div>
<div class="ttc" id="class_query_result_htm_aaeb262416e472885dc6a3c7c3c7c3306"><div class="ttname"><a href="class_query_result.htm#aaeb262416e472885dc6a3c7c3c7c3306">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QByteArray &amp;value) const</div><div class="ttdoc">Assigns a variable the value from the current record. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:557</div></div>
<div class="ttc" id="class_query_result_htm_a91d15081bc1d6eccefe089f4948438cb"><div class="ttname"><a href="class_query_result.htm#a91d15081bc1d6eccefe089f4948438cb">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QDateTime &amp;value) const</div><div class="ttdoc">Assigns a variable the value from the current record. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:533</div></div>
<div class="ttc" id="class_query_result_htm_a53a94d8a3a9ca6916716d79b5fb48837"><div class="ttname"><a href="class_query_result.htm#a53a94d8a3a9ca6916716d79b5fb48837">QueryResult::fetchGadget</a></div><div class="ttdeci">void fetchGadget(T &amp;gadget) const</div><div class="ttdoc">Fills Q_GADGET object properties with data fetched from current result row. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:758</div></div>
<div class="ttc" id="class_query_result_htm_a90ec24d07326aaa31e5372cfa377c985"><div class="ttname"><a href="class_query_result.htm#a90ec24d07326aaa31e5372cfa377c985">QueryResult::value</a></div><div class="ttdeci">QVariant value(const QString &amp;colName) const</div><div class="ttdoc">Returns the value of the field called name in the current record. If field name does not exist an inv...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:241</div></div>
<div class="ttc" id="class_query_result_htm_aa62c42135a62658a7e56426a024d0146"><div class="ttname"><a href="class_query_result.htm#aa62c42135a62658a7e56426a024d0146">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(bool &amp;value, Rest &amp;... rest) const</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:597</div></div>
<div class="ttc" id="class_query_result_htm_a5efedd7a6e170ddeaddbac5428951085"><div class="ttname"><a href="class_query_result.htm#a5efedd7a6e170ddeaddbac5428951085">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QByteArray &amp;value, Rest &amp;... rest) const</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:625</div></div>
<div class="ttc" id="class_query_result_htm_a0d6642a5d017d6f99e0f5cb06d6740ca"><div class="ttname"><a href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(int &amp;value) const</div><div class="ttdoc">Assigns a variable the value from the current record. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:473</div></div>
<div class="ttc" id="class_query_result_htm_ad09b4730fecad00984e32e7f3defa76e"><div class="ttname"><a href="class_query_result.htm#ad09b4730fecad00984e32e7f3defa76e">QueryResult::boundValue</a></div><div class="ttdeci">QVariant boundValue(int column) const</div><div class="ttdoc">Returns the value for the placeholder at position column. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:251</div></div>
<div class="ttc" id="class_query_result_htm_aadabff776f939dd7c3895318396ae59e"><div class="ttname"><a href="class_query_result.htm#aadabff776f939dd7c3895318396ae59e">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QDate &amp;value, Rest &amp;... rest) const</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:604</div></div>
<div class="ttc" id="class_query_result_htm_a5b6ef75a4da642c0c467d0110ce1701a"><div class="ttname"><a href="class_query_result.htm#a5b6ef75a4da642c0c467d0110ce1701a">QueryResult::isForwardOnly</a></div><div class="ttdeci">bool isForwardOnly() const</div><div class="ttdoc">Returns true if you can only scroll forward through a result set; otherwise returns false...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:171</div></div>
<div class="ttc" id="class_query_result_htm_acf30d6c095e00eb7b1bc942563597d4b"><div class="ttname"><a href="class_query_result.htm#acf30d6c095e00eb7b1bc942563597d4b">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QString &amp;value, Rest &amp;... rest) const</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:590</div></div>
<div class="ttc" id="class_query_result_htm_af49cf244de53dd4340b486990f38c553"><div class="ttname"><a href="class_query_result.htm#af49cf244de53dd4340b486990f38c553">QueryResult::at</a></div><div class="ttdeci">int at() const</div><div class="ttdoc">Returns the current internal position of the query. The first record is at position zero...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:141</div></div>
<div class="ttc" id="class_query_result_htm_ad46ba52de7f43f45c19d4b7eecabca4b"><div class="ttname"><a href="class_query_result.htm#ad46ba52de7f43f45c19d4b7eecabca4b">QueryResult::size</a></div><div class="ttdeci">int size() const</div><div class="ttdoc">Returns the size of the result (number of rows returned), or -1 if the size cannot be determined or i...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:181</div></div>
<div class="ttc" id="class_query_result_htm_a0f79c838a9fcd4a5d48e61abc79612e9"><div class="ttname"><a href="class_query_result.htm#a0f79c838a9fcd4a5d48e61abc79612e9">QueryResult::fetchMap</a></div><div class="ttdeci">void fetchMap(QVariantMap &amp;map) const</div><div class="ttdoc">Fills QVariantMap with values fetched from current result row. Key is QString (result column name) an...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:787</div></div>
<div class="ttc" id="class_query_result_htm_aa1595196bd3fd72c9ee95c6c0a82f711"><div class="ttname"><a href="class_query_result.htm#aa1595196bd3fd72c9ee95c6c0a82f711">QueryResult::toList</a></div><div class="ttdeci">QVariantList toList() const</div><div class="ttdoc">Returns QVariantList filled with values fetched from current result row. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:308</div></div>
<div class="ttc" id="class_query_result_htm_aab68396b876b689f21109301cf350ee3"><div class="ttname"><a href="class_query_result.htm#aab68396b876b689f21109301cf350ee3">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QDateTime &amp;value, Rest &amp;... rest) const</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:611</div></div>
<div class="ttc" id="class_query_result_htm_aa4f8c874ffb9e6b1285a69322aec61ea"><div class="ttname"><a href="class_query_result.htm#aa4f8c874ffb9e6b1285a69322aec61ea">QueryResult::toVector</a></div><div class="ttdeci">QVector&lt; T &gt; toVector(bool skipNullValues=false) const</div><div class="ttdoc">Returns QVector&lt;T&gt; filled with values fetched from current result row. SQL values converted with QVar...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:350</div></div>
<div class="ttc" id="class_query_result_htm_af2870c71cd1b750c8151a7b4420903fa"><div class="ttname"><a href="class_query_result.htm#af2870c71cd1b750c8151a7b4420903fa">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QTime &amp;value) const</div><div class="ttdoc">Assigns a variable the value from the current record. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:545</div></div>
<div class="ttc" id="class_query_result_htm_a0e5a5d108da1d03b0f624e18330a10f5"><div class="ttname"><a href="class_query_result.htm#a0e5a5d108da1d03b0f624e18330a10f5">QueryResult::last</a></div><div class="ttdeci">bool last()</div><div class="ttdoc">Retrieves the last record in the result, if available, and positions the query on the retrieved recor...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:120</div></div>
<div class="ttc" id="class_query_result_htm_a540f4948af295e336c58a6fe30e48c0b"><div class="ttname"><a href="class_query_result.htm#a540f4948af295e336c58a6fe30e48c0b">QueryResult::boundValues</a></div><div class="ttdeci">QVariantList boundValues() const</div><div class="ttdoc">Returns list of the bound values (with positional binding) </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:284</div></div>
<div class="ttc" id="class_database_htm"><div class="ttname"><a href="class_database.htm">Database</a></div><div class="ttdoc">QSqlDatabase wrapper. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_Transaction.h:67</div></div>
<div class="ttc" id="class_query_result_htm_a46b374177ab23d8f9d7dc9366eb57655"><div class="ttname"><a href="class_query_result.htm#a46b374177ab23d8f9d7dc9366eb57655">QueryResult::isActive</a></div><div class="ttdeci">bool isActive() const</div><div class="ttdoc">Returns true if the query is active. An active QSqlQuery is one that has been exec()&amp;#39;d successfully b...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:151</div></div>
<div class="ttc" id="class_query_result_htm_a50a5fa4850f774f301ed88a488a44726"><div class="ttname"><a href="class_query_result.htm#a50a5fa4850f774f301ed88a488a44726">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QDate &amp;value) const</div><div class="ttdoc">Assigns a variable the value from the current record. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:521</div></div>
<div class="ttc" id="class_query_result_htm_a0a381517b5fa64a68e4d10972b0ceefc"><div class="ttname"><a href="class_query_result.htm#a0a381517b5fa64a68e4d10972b0ceefc">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QVariant &amp;value, Rest &amp;... rest) const</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:632</div></div>
<div class="ttc" id="class_query_result_htm_a26baf17cd661ec312918f660ac9e4b1a"><div class="ttname"><a href="class_query_result.htm#a26baf17cd661ec312918f660ac9e4b1a">QueryResult::numRowsAffected</a></div><div class="ttdeci">int numRowsAffected() const</div><div class="ttdoc">Returns the number of rows affected by the result&amp;#39;s SQL statement, or -1 if it cannot be determined...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:191</div></div>
<div class="ttc" id="class_query_result_htm_a74350f3ed705c8768bd748fe942438de"><div class="ttname"><a href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">QueryResult::value</a></div><div class="ttdeci">QVariant value(int column) const</div><div class="ttdoc">Returns the value of field index in the current record. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:231</div></div>
<div class="ttc" id="class_query_result_htm_a0b82a02ab7a45f1092e93d56a87dc67b"><div class="ttname"><a href="class_query_result.htm#a0b82a02ab7a45f1092e93d56a87dc67b">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(double &amp;value, Rest &amp;... rest) const</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:583</div></div>
<div class="ttc" id="class_query_result_htm_a023bd84f7010368d616d7dbb1b399a06"><div class="ttname"><a href="class_query_result.htm#a023bd84f7010368d616d7dbb1b399a06">QueryResult::toMap</a></div><div class="ttdeci">QVariantMap toMap() const</div><div class="ttdoc">Returns QVariantMap filled with values fetched from current result row. Key is QString (result column...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:295</div></div>
<div class="ttc" id="class_query_result_htm_af49ff273eb3efd184ca423df846ba507"><div class="ttname"><a href="class_query_result.htm#af49ff273eb3efd184ca423df846ba507">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(bool &amp;value) const</div><div class="ttdoc">Assigns a variable the value from the current record. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:509</div></div>
<div class="ttc" id="class_query_result_htm_a9ed922784c015b27b7fb53fafb10b391"><div class="ttname"><a href="class_query_result.htm#a9ed922784c015b27b7fb53fafb10b391">QueryResult::nextResult</a></div><div class="ttdeci">bool nextResult()</div><div class="ttdoc">Discards the current result set and navigates to the next if available (if database is capable of ret...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:96</div></div>
<div class="ttc" id="class_query_result_htm_aff65a998f1c8be8c1dd630438a820158"><div class="ttname"><a href="class_query_result.htm#aff65a998f1c8be8c1dd630438a820158">QueryResult::seek</a></div><div class="ttdeci">bool seek(int index, bool relative=false)</div><div class="ttdoc">Retrieves the record at position index, if available, and positions the query on the retrieved record...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:130</div></div>
<div class="ttc" id="class_query_result_htm_a79a40fde15ca3ceaa4f0c7b8ba649558"><div class="ttname"><a href="class_query_result.htm#a79a40fde15ca3ceaa4f0c7b8ba649558">QueryResult::fetchObject</a></div><div class="ttdeci">void fetchObject(QObject &amp;object) const</div><div class="ttdoc">Fills Q_OBJECT object properties with data fetched from current result row. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:686</div></div>
<div class="ttc" id="class_query_result_htm"><div class="ttname"><a href="class_query_result.htm">QueryResult</a></div><div class="ttdoc">QSqlQuery wrapper with handy data fetch methods. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:39</div></div>
<div class="ttc" id="class_transaction_htm"><div class="ttname"><a href="class_transaction.htm">Transaction</a></div><div class="ttdoc">QSqlDatabase transaction wrapper. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_Transaction.h:398</div></div>
<div class="ttc" id="class_query_result_htm_af49aaa8a26876c7a095326c8b2d5ba6a"><div class="ttname"><a href="class_query_result.htm#af49aaa8a26876c7a095326c8b2d5ba6a">QueryResult::fetchStringList</a></div><div class="ttdeci">void fetchStringList(QStringList &amp;list) const</div><div class="ttdoc">Fills QStringList with values fetched from current result row. SQL values converted to QString with Q...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:833</div></div>
<div class="ttc" id="class_query_result_htm_a1c756382c20c126979b28715d529c054"><div class="ttname"><a href="class_query_result.htm#a1c756382c20c126979b28715d529c054">QueryResult::next</a></div><div class="ttdeci">bool next()</div><div class="ttdoc">Retrieves the next record in the result, if available, and positions the query on the retrieved recor...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:60</div></div>
<div class="ttc" id="class_query_result_htm_a1a43faec4675b58bd0506a4de7c3976f"><div class="ttname"><a href="class_query_result.htm#a1a43faec4675b58bd0506a4de7c3976f">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QString &amp;value) const</div><div class="ttdoc">Assigns a variable the value from the current record. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:497</div></div>
<div class="ttc" id="class_query_result_htm_a6831da3d942ccf741984f72d1d2eb57d"><div class="ttname"><a href="class_query_result.htm#a6831da3d942ccf741984f72d1d2eb57d">QueryResult::toStringList</a></div><div class="ttdeci">QStringList toStringList() const</div><div class="ttdoc">Returns QStringList filled with values fetched from current result row. SQL values converted to QStri...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:321</div></div>
<div class="ttc" id="class_query_result_htm_a406abd3501b2f3d89bf6bb7e5e8cd7c3"><div class="ttname"><a href="class_query_result.htm#a406abd3501b2f3d89bf6bb7e5e8cd7c3">QueryResult::first</a></div><div class="ttdeci">bool first()</div><div class="ttdoc">Retrieves the first record in the result, if available, and positions the query on the retrieved reco...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:110</div></div>
<div class="ttc" id="class_query_result_htm_a462dc42f451155eca3b56b9239cf8535"><div class="ttname"><a href="class_query_result.htm#a462dc42f451155eca3b56b9239cf8535">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(QTime &amp;value, Rest &amp;... rest) const</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:618</div></div>
<div class="ttc" id="class_query_result_htm_af86eb1e97db39a70d504389494e2b329"><div class="ttname"><a href="class_query_result.htm#af86eb1e97db39a70d504389494e2b329">QueryResult::lastQuery</a></div><div class="ttdeci">QString lastQuery() const</div><div class="ttdoc">Returns the text of the current query being used, or an empty string if there is no current query tex...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:211</div></div>
<div class="ttc" id="class_query_result_htm_af62abbe3a59c25163c90e4a5fec632c7"><div class="ttname"><a href="class_query_result.htm#af62abbe3a59c25163c90e4a5fec632c7">QueryResult::fetchList</a></div><div class="ttdeci">void fetchList(QVariantList &amp;list) const</div><div class="ttdoc">Fills QVariantList with values fetched from current result row. SQL values not converted: QSqlQuery::...</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:802</div></div>
<div class="ttc" id="class_query_result_htm_abfc27e5ad56a2da113bdb804b3fd682c"><div class="ttname"><a href="class_query_result.htm#abfc27e5ad56a2da113bdb804b3fd682c">QueryResult::executedQuery</a></div><div class="ttdeci">QString executedQuery() const</div><div class="ttdoc">Returns the last query that was successfully executed. </div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:221</div></div>
<div class="ttc" id="class_query_result_htm_a5421dce74a177933675ede65a68972a0"><div class="ttname"><a href="class_query_result.htm#a5421dce74a177933675ede65a68972a0">QueryResult::fetchVars</a></div><div class="ttdeci">void fetchVars(int &amp;value, Rest &amp;... rest) const</div><div class="ttdef"><b>Definition:</b> EasyQtSql_QueryResult.h:576</div></div>
<div class="ttc" id="_easy_qt_sql___non_query_result_8h_htm"><div class="ttname"><a href="_easy_qt_sql___non_query_result_8h.htm">EasyQtSql_NonQueryResult.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_ccd1b38e141953c502dde9cd8646e4d8.htm">EasyQtSql</a></li><li class="navelem"><a class="el" href="_easy_qt_sql___query_result_8h.htm">EasyQtSql_QueryResult.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.14 </li>
  </ul>
</div>
</body>
</html>
