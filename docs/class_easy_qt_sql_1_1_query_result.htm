<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>EasyQtSql: EasyQtSql::QueryResult Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">EasyQtSql
   </div>
   <div id="projectbrief">Easy SQL data access helper for QtSql</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_easy_qt_sql_1_1_query_result.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="class_easy_qt_sql_1_1_query_result-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">EasyQtSql::QueryResult Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>QSqlQuery wrapper with handy data fetch methods.  
 <a href="class_easy_qt_sql_1_1_query_result.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_easy_qt_sql_8h_source.htm">EasyQtSql.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1537d10148632523112d5f3fc8a8de76"><td class="memItemLeft" align="right" valign="top">QSqlQuery &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a1537d10148632523112d5f3fc8a8de76">unwrappedQuery</a> ()</td></tr>
<tr class="memdesc:a1537d10148632523112d5f3fc8a8de76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns reference on wrapped QSqlQuery.  <a href="#a1537d10148632523112d5f3fc8a8de76">More...</a><br /></td></tr>
<tr class="separator:a1537d10148632523112d5f3fc8a8de76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e1b0790cdb82a848f2b48ddc698001b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a3e1b0790cdb82a848f2b48ddc698001b">next</a> ()</td></tr>
<tr class="memdesc:a3e1b0790cdb82a848f2b48ddc698001b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the next record in the result, if available, and positions the query on the retrieved record.  <a href="#a3e1b0790cdb82a848f2b48ddc698001b">More...</a><br /></td></tr>
<tr class="separator:a3e1b0790cdb82a848f2b48ddc698001b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6617545f5395115ff050005a5939c2a6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a6617545f5395115ff050005a5939c2a6">previous</a> ()</td></tr>
<tr class="memdesc:a6617545f5395115ff050005a5939c2a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the previous record in the result, if available, and positions the query on the retrieved record.  <a href="#a6617545f5395115ff050005a5939c2a6">More...</a><br /></td></tr>
<tr class="separator:a6617545f5395115ff050005a5939c2a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa51ab0f7b9812106f0d9afda80bf1194"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#aa51ab0f7b9812106f0d9afda80bf1194">nextResult</a> ()</td></tr>
<tr class="memdesc:aa51ab0f7b9812106f0d9afda80bf1194"><td class="mdescLeft">&#160;</td><td class="mdescRight">Discards the current result set and navigates to the next if available (if database is capable of returning multiple result sets)  <a href="#aa51ab0f7b9812106f0d9afda80bf1194">More...</a><br /></td></tr>
<tr class="separator:aa51ab0f7b9812106f0d9afda80bf1194"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9bb9fdbc1ee460c6fc2b252100b62cf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#aa9bb9fdbc1ee460c6fc2b252100b62cf">first</a> ()</td></tr>
<tr class="memdesc:aa9bb9fdbc1ee460c6fc2b252100b62cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the first record in the result, if available, and positions the query on the retrieved record.  <a href="#aa9bb9fdbc1ee460c6fc2b252100b62cf">More...</a><br /></td></tr>
<tr class="separator:aa9bb9fdbc1ee460c6fc2b252100b62cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2e079ad6bd6d1865848dd4073260d9d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ae2e079ad6bd6d1865848dd4073260d9d">last</a> ()</td></tr>
<tr class="memdesc:ae2e079ad6bd6d1865848dd4073260d9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the last record in the result, if available, and positions the query on the retrieved record.  <a href="#ae2e079ad6bd6d1865848dd4073260d9d">More...</a><br /></td></tr>
<tr class="separator:ae2e079ad6bd6d1865848dd4073260d9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b1d233aa138f29eb2e5e9c1a04c8401"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a0b1d233aa138f29eb2e5e9c1a04c8401">seek</a> (int index, bool relative=false)</td></tr>
<tr class="memdesc:a0b1d233aa138f29eb2e5e9c1a04c8401"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the record at position index, if available, and positions the query on the retrieved record.  <a href="#a0b1d233aa138f29eb2e5e9c1a04c8401">More...</a><br /></td></tr>
<tr class="separator:a0b1d233aa138f29eb2e5e9c1a04c8401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a833c39c721b00c160c8a744bd58be0a0"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a833c39c721b00c160c8a744bd58be0a0">at</a> () const</td></tr>
<tr class="memdesc:a833c39c721b00c160c8a744bd58be0a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current internal position of the query. The first record is at position zero.  <a href="#a833c39c721b00c160c8a744bd58be0a0">More...</a><br /></td></tr>
<tr class="separator:a833c39c721b00c160c8a744bd58be0a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58ff79b8baf637e10a23a5b973bbf232"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a58ff79b8baf637e10a23a5b973bbf232">isActive</a> () const</td></tr>
<tr class="memdesc:a58ff79b8baf637e10a23a5b973bbf232"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the query is active. An active QSqlQuery is one that has been exec()'d successfully but not yet finished with.  <a href="#a58ff79b8baf637e10a23a5b973bbf232">More...</a><br /></td></tr>
<tr class="separator:a58ff79b8baf637e10a23a5b973bbf232"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59d9dc03eba034c9dc22867235c5e728"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a59d9dc03eba034c9dc22867235c5e728">isValid</a> () const</td></tr>
<tr class="memdesc:a59d9dc03eba034c9dc22867235c5e728"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the query is currently positioned on a valid record; otherwise returns false.  <a href="#a59d9dc03eba034c9dc22867235c5e728">More...</a><br /></td></tr>
<tr class="separator:a59d9dc03eba034c9dc22867235c5e728"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f2c89653608105ef1ea34962f08db34"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a1f2c89653608105ef1ea34962f08db34">isForwardOnly</a> () const</td></tr>
<tr class="memdesc:a1f2c89653608105ef1ea34962f08db34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if you can only scroll forward through a result set; otherwise returns false.  <a href="#a1f2c89653608105ef1ea34962f08db34">More...</a><br /></td></tr>
<tr class="separator:a1f2c89653608105ef1ea34962f08db34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cd87f53f90c9061ab8d9ae66cf97e4a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a9cd87f53f90c9061ab8d9ae66cf97e4a">size</a> () const</td></tr>
<tr class="memdesc:a9cd87f53f90c9061ab8d9ae66cf97e4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the size of the result (number of rows returned), or -1 if the size cannot be determined or if the database does not support reporting information about query sizes.  <a href="#a9cd87f53f90c9061ab8d9ae66cf97e4a">More...</a><br /></td></tr>
<tr class="separator:a9cd87f53f90c9061ab8d9ae66cf97e4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af277d176f33fce29dd0049d4b267912c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#af277d176f33fce29dd0049d4b267912c">numRowsAffected</a> () const</td></tr>
<tr class="memdesc:af277d176f33fce29dd0049d4b267912c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of rows affected by the result's SQL statement, or -1 if it cannot be determined.  <a href="#af277d176f33fce29dd0049d4b267912c">More...</a><br /></td></tr>
<tr class="separator:af277d176f33fce29dd0049d4b267912c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2a5f651570c3258165ad55a7c141186"><td class="memItemLeft" align="right" valign="top">QSqlError&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab2a5f651570c3258165ad55a7c141186">lastError</a> () const</td></tr>
<tr class="memdesc:ab2a5f651570c3258165ad55a7c141186"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns error information about the last error (if any) that occurred with this query.  <a href="#ab2a5f651570c3258165ad55a7c141186">More...</a><br /></td></tr>
<tr class="separator:ab2a5f651570c3258165ad55a7c141186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20322bb72518c12159e0ffa9c6003e12"><td class="memItemLeft" align="right" valign="top">QString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a20322bb72518c12159e0ffa9c6003e12">lastQuery</a> () const</td></tr>
<tr class="memdesc:a20322bb72518c12159e0ffa9c6003e12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the text of the current query being used, or an empty string if there is no current query text.  <a href="#a20322bb72518c12159e0ffa9c6003e12">More...</a><br /></td></tr>
<tr class="separator:a20322bb72518c12159e0ffa9c6003e12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe5f540e13e57385fc57c8826b61816e"><td class="memItemLeft" align="right" valign="top">QString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#abe5f540e13e57385fc57c8826b61816e">executedQuery</a> () const</td></tr>
<tr class="memdesc:abe5f540e13e57385fc57c8826b61816e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last query that was successfully executed.  <a href="#abe5f540e13e57385fc57c8826b61816e">More...</a><br /></td></tr>
<tr class="separator:abe5f540e13e57385fc57c8826b61816e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72fe9d306b5866c15f99a3a413d9ec16"><td class="memItemLeft" align="right" valign="top">QVariant&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a> (int column) const</td></tr>
<tr class="memdesc:a72fe9d306b5866c15f99a3a413d9ec16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of field index in the current record.  <a href="#a72fe9d306b5866c15f99a3a413d9ec16">More...</a><br /></td></tr>
<tr class="separator:a72fe9d306b5866c15f99a3a413d9ec16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a507339724a5bc10e3f5eeab709885b4a"><td class="memItemLeft" align="right" valign="top">QVariant&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a507339724a5bc10e3f5eeab709885b4a">value</a> (const QString &amp;colName) const</td></tr>
<tr class="memdesc:a507339724a5bc10e3f5eeab709885b4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of the field called name in the current record. If field name does not exist an invalid variant is returned.  <a href="#a507339724a5bc10e3f5eeab709885b4a">More...</a><br /></td></tr>
<tr class="separator:a507339724a5bc10e3f5eeab709885b4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10971ce872fed637dad73c9ffe4681cf"><td class="memItemLeft" align="right" valign="top">QVariant&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a10971ce872fed637dad73c9ffe4681cf">boundValue</a> (int column) const</td></tr>
<tr class="memdesc:a10971ce872fed637dad73c9ffe4681cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value for the placeholder at position column.  <a href="#a10971ce872fed637dad73c9ffe4681cf">More...</a><br /></td></tr>
<tr class="separator:a10971ce872fed637dad73c9ffe4681cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d619dd817888bc9179a7a37a3a6a515"><td class="memItemLeft" align="right" valign="top">QVariant&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a4d619dd817888bc9179a7a37a3a6a515">boundValue</a> (const QString &amp;aliasName) const</td></tr>
<tr class="memdesc:a4d619dd817888bc9179a7a37a3a6a515"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value for the placeholder with aliasName.  <a href="#a4d619dd817888bc9179a7a37a3a6a515">More...</a><br /></td></tr>
<tr class="separator:a4d619dd817888bc9179a7a37a3a6a515"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae45b225a9a7d64f9d151bc21c353275f"><td class="memItemLeft" align="right" valign="top">QVariantList&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ae45b225a9a7d64f9d151bc21c353275f">boundValues</a> () const</td></tr>
<tr class="memdesc:ae45b225a9a7d64f9d151bc21c353275f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns list of the bound values (with positional binding)  <a href="#ae45b225a9a7d64f9d151bc21c353275f">More...</a><br /></td></tr>
<tr class="separator:ae45b225a9a7d64f9d151bc21c353275f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27809ada6725d479f31b66ebcbc7c95c"><td class="memItemLeft" align="right" valign="top">QVariantMap&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a27809ada6725d479f31b66ebcbc7c95c">toMap</a> () const</td></tr>
<tr class="memdesc:a27809ada6725d479f31b66ebcbc7c95c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns QVariantMap filled with values fetched from current result row. Key is QString (result column name) and value is QVariant value.  <a href="#a27809ada6725d479f31b66ebcbc7c95c">More...</a><br /></td></tr>
<tr class="separator:a27809ada6725d479f31b66ebcbc7c95c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bc07b088b7abea529171589c3bdce09"><td class="memItemLeft" align="right" valign="top">QVariantList&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a7bc07b088b7abea529171589c3bdce09">toList</a> () const</td></tr>
<tr class="memdesc:a7bc07b088b7abea529171589c3bdce09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns QVariantList filled with values fetched from current result row.  <a href="#a7bc07b088b7abea529171589c3bdce09">More...</a><br /></td></tr>
<tr class="separator:a7bc07b088b7abea529171589c3bdce09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a152e0d75c2c149896955c3257ca08e7d"><td class="memItemLeft" align="right" valign="top">QStringList&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a152e0d75c2c149896955c3257ca08e7d">toStringList</a> () const</td></tr>
<tr class="memdesc:a152e0d75c2c149896955c3257ca08e7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns QStringList filled with values fetched from current result row. SQL values converted to QString with QVariant::toString() method.  <a href="#a152e0d75c2c149896955c3257ca08e7d">More...</a><br /></td></tr>
<tr class="separator:a152e0d75c2c149896955c3257ca08e7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab713b1eed43ec3d4758beab0748882d3"><td class="memItemLeft" align="right" valign="top">QVector&lt; QVariant &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab713b1eed43ec3d4758beab0748882d3">toVector</a> () const</td></tr>
<tr class="memdesc:ab713b1eed43ec3d4758beab0748882d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns QVector&lt;QVariant&gt; filled with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used.  <a href="#ab713b1eed43ec3d4758beab0748882d3">More...</a><br /></td></tr>
<tr class="separator:ab713b1eed43ec3d4758beab0748882d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44ef2a3f6f1bc01f0eabfc4ca4d54922"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a44ef2a3f6f1bc01f0eabfc4ca4d54922"><td class="memTemplItemLeft" align="right" valign="top">QVector&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a44ef2a3f6f1bc01f0eabfc4ca4d54922">toVector</a> (bool skipNullValues=false) const</td></tr>
<tr class="memdesc:a44ef2a3f6f1bc01f0eabfc4ca4d54922"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns QVector&lt;T&gt; filled with values fetched from current result row. SQL values converted with QVariant::value&lt;T&gt;(). QVector::canConvert&lt;T&gt;() method used for convertability check. Non-convertable values skipped.  <a href="#a44ef2a3f6f1bc01f0eabfc4ca4d54922">More...</a><br /></td></tr>
<tr class="separator:a44ef2a3f6f1bc01f0eabfc4ca4d54922"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a118e2ac7aa817a6677b71eae61df3801"><td class="memItemLeft" align="right" valign="top">QVector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a118e2ac7aa817a6677b71eae61df3801">parseToIntVector</a> (int base=10, bool skipNullValues=false) const</td></tr>
<tr class="memdesc:a118e2ac7aa817a6677b71eae61df3801"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns vector of (optionally parsed) integer values from currently active result row.  <a href="#a118e2ac7aa817a6677b71eae61df3801">More...</a><br /></td></tr>
<tr class="separator:a118e2ac7aa817a6677b71eae61df3801"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46595f825d0fd0a5c765bc6d301fccb9"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a46595f825d0fd0a5c765bc6d301fccb9"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a46595f825d0fd0a5c765bc6d301fccb9">scalar</a> () const</td></tr>
<tr class="memdesc:a46595f825d0fd0a5c765bc6d301fccb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns scalar value converted to type T (the value of the first column of the current row)  <a href="#a46595f825d0fd0a5c765bc6d301fccb9">More...</a><br /></td></tr>
<tr class="separator:a46595f825d0fd0a5c765bc6d301fccb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa859ae4f8e2093494f8b2849d6f4f842"><td class="memItemLeft" align="right" valign="top">QVariant&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#aa859ae4f8e2093494f8b2849d6f4f842">scalar</a> () const</td></tr>
<tr class="memdesc:aa859ae4f8e2093494f8b2849d6f4f842"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns scalar value (the value of the first column of the current row)  <a href="#aa859ae4f8e2093494f8b2849d6f4f842">More...</a><br /></td></tr>
<tr class="separator:aa859ae4f8e2093494f8b2849d6f4f842"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0dac0809b8eab8f066106391346dfb4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab0dac0809b8eab8f066106391346dfb4">fetchVars</a> (int &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>) const</td></tr>
<tr class="memdesc:ab0dac0809b8eab8f066106391346dfb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#ab0dac0809b8eab8f066106391346dfb4">More...</a><br /></td></tr>
<tr class="separator:ab0dac0809b8eab8f066106391346dfb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54796f80b1171f84c96f04d68ff3f687"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a54796f80b1171f84c96f04d68ff3f687">fetchVars</a> (double &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>) const</td></tr>
<tr class="memdesc:a54796f80b1171f84c96f04d68ff3f687"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a54796f80b1171f84c96f04d68ff3f687">More...</a><br /></td></tr>
<tr class="separator:a54796f80b1171f84c96f04d68ff3f687"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7240189d55b45580eb22a7c4891ffc0d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a7240189d55b45580eb22a7c4891ffc0d">fetchVars</a> (QString &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>) const</td></tr>
<tr class="memdesc:a7240189d55b45580eb22a7c4891ffc0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a7240189d55b45580eb22a7c4891ffc0d">More...</a><br /></td></tr>
<tr class="separator:a7240189d55b45580eb22a7c4891ffc0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a971772dc3b77d7b37cb45453a559b400"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a971772dc3b77d7b37cb45453a559b400">fetchVars</a> (bool &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>) const</td></tr>
<tr class="memdesc:a971772dc3b77d7b37cb45453a559b400"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a971772dc3b77d7b37cb45453a559b400">More...</a><br /></td></tr>
<tr class="separator:a971772dc3b77d7b37cb45453a559b400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16a8d3f9c94b8b258774562fcaabdbb6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a16a8d3f9c94b8b258774562fcaabdbb6">fetchVars</a> (QDate &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>) const</td></tr>
<tr class="memdesc:a16a8d3f9c94b8b258774562fcaabdbb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a16a8d3f9c94b8b258774562fcaabdbb6">More...</a><br /></td></tr>
<tr class="separator:a16a8d3f9c94b8b258774562fcaabdbb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a502f74e4c044cf4a1469db35bde3b158"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a502f74e4c044cf4a1469db35bde3b158">fetchVars</a> (QDateTime &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>) const</td></tr>
<tr class="memdesc:a502f74e4c044cf4a1469db35bde3b158"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a502f74e4c044cf4a1469db35bde3b158">More...</a><br /></td></tr>
<tr class="separator:a502f74e4c044cf4a1469db35bde3b158"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5b172d80a6135ea6d7d33ee656100c5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ad5b172d80a6135ea6d7d33ee656100c5">fetchVars</a> (QTime &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>) const</td></tr>
<tr class="memdesc:ad5b172d80a6135ea6d7d33ee656100c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#ad5b172d80a6135ea6d7d33ee656100c5">More...</a><br /></td></tr>
<tr class="separator:ad5b172d80a6135ea6d7d33ee656100c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae91953f034ff0f42e28d4775b3057404"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ae91953f034ff0f42e28d4775b3057404">fetchVars</a> (QByteArray &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>) const</td></tr>
<tr class="memdesc:ae91953f034ff0f42e28d4775b3057404"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#ae91953f034ff0f42e28d4775b3057404">More...</a><br /></td></tr>
<tr class="separator:ae91953f034ff0f42e28d4775b3057404"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62dc72615ea6a5f767cfc5e0a445008b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a62dc72615ea6a5f767cfc5e0a445008b">fetchVars</a> (QVariant &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>) const</td></tr>
<tr class="memdesc:a62dc72615ea6a5f767cfc5e0a445008b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a62dc72615ea6a5f767cfc5e0a445008b">More...</a><br /></td></tr>
<tr class="separator:a62dc72615ea6a5f767cfc5e0a445008b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0152c78a61e0580b1fbfd9da902aac23"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a0152c78a61e0580b1fbfd9da902aac23"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a0152c78a61e0580b1fbfd9da902aac23">fetchVars</a> (int &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a0152c78a61e0580b1fbfd9da902aac23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c2f9d001255f0b8967a5047fa472b09"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a3c2f9d001255f0b8967a5047fa472b09"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a3c2f9d001255f0b8967a5047fa472b09">fetchVars</a> (double &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a3c2f9d001255f0b8967a5047fa472b09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58ecd7967c4befdc164c0bdaaa6f4121"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a58ecd7967c4befdc164c0bdaaa6f4121"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a58ecd7967c4befdc164c0bdaaa6f4121">fetchVars</a> (QString &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a58ecd7967c4befdc164c0bdaaa6f4121"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb95f5845ec36bf273b275e45418374b"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:afb95f5845ec36bf273b275e45418374b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#afb95f5845ec36bf273b275e45418374b">fetchVars</a> (bool &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:afb95f5845ec36bf273b275e45418374b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dd12aaf3dad417e24fc1a08c0fab8ed"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a1dd12aaf3dad417e24fc1a08c0fab8ed"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a1dd12aaf3dad417e24fc1a08c0fab8ed">fetchVars</a> (QDate &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a1dd12aaf3dad417e24fc1a08c0fab8ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d9856aaa98c27ae865d18f7270e4c61"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a1d9856aaa98c27ae865d18f7270e4c61"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a1d9856aaa98c27ae865d18f7270e4c61">fetchVars</a> (QDateTime &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a1d9856aaa98c27ae865d18f7270e4c61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39ea9d3b1014c00d1fac339c05dd6e62"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a39ea9d3b1014c00d1fac339c05dd6e62"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a39ea9d3b1014c00d1fac339c05dd6e62">fetchVars</a> (QTime &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a39ea9d3b1014c00d1fac339c05dd6e62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1be09d31b9a2cc2ccaf81eca20f51b1"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:aa1be09d31b9a2cc2ccaf81eca20f51b1"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#aa1be09d31b9a2cc2ccaf81eca20f51b1">fetchVars</a> (QByteArray &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:aa1be09d31b9a2cc2ccaf81eca20f51b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf9c67bc75c07386d7234b2c0edcd0a6"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:abf9c67bc75c07386d7234b2c0edcd0a6"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#abf9c67bc75c07386d7234b2c0edcd0a6">fetchVars</a> (QVariant &amp;<a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a72fe9d306b5866c15f99a3a413d9ec16">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:abf9c67bc75c07386d7234b2c0edcd0a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a043b284c72b54c4a2871867196a67560"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a043b284c72b54c4a2871867196a67560">fetchObject</a> (QObject &amp;object) const</td></tr>
<tr class="memdesc:a043b284c72b54c4a2871867196a67560"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills Q_OBJECT object properties with data fetched from current result row.  <a href="#a043b284c72b54c4a2871867196a67560">More...</a><br /></td></tr>
<tr class="separator:a043b284c72b54c4a2871867196a67560"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaece06902097ce3275792c3b33c6dc2d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aaece06902097ce3275792c3b33c6dc2d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#aaece06902097ce3275792c3b33c6dc2d">fetchGadget</a> (T &amp;gadget) const</td></tr>
<tr class="memdesc:aaece06902097ce3275792c3b33c6dc2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills Q_GADGET object properties with data fetched from current result row.  <a href="#aaece06902097ce3275792c3b33c6dc2d">More...</a><br /></td></tr>
<tr class="separator:aaece06902097ce3275792c3b33c6dc2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf2dee4a21aed3b495ffc56de32a3fe0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#aaf2dee4a21aed3b495ffc56de32a3fe0">fetchMap</a> (QVariantMap &amp;map) const</td></tr>
<tr class="memdesc:aaf2dee4a21aed3b495ffc56de32a3fe0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills QVariantMap with values fetched from current result row. Key is QString (result column name) and value is QVariant value.  <a href="#aaf2dee4a21aed3b495ffc56de32a3fe0">More...</a><br /></td></tr>
<tr class="separator:aaf2dee4a21aed3b495ffc56de32a3fe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3aaa9b4e9c45e0a5c303f916c7ecee64"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a3aaa9b4e9c45e0a5c303f916c7ecee64">fetchList</a> (QVariantList &amp;list) const</td></tr>
<tr class="memdesc:a3aaa9b4e9c45e0a5c303f916c7ecee64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills QVariantList with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used.  <a href="#a3aaa9b4e9c45e0a5c303f916c7ecee64">More...</a><br /></td></tr>
<tr class="separator:a3aaa9b4e9c45e0a5c303f916c7ecee64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0c451fdf40b3f070e91d2acf2dc7eb4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#af0c451fdf40b3f070e91d2acf2dc7eb4">fetchVector</a> (QVector&lt; QVariant &gt; &amp;vector) const</td></tr>
<tr class="memdesc:af0c451fdf40b3f070e91d2acf2dc7eb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills QVector&lt;QVariant&gt; with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used.  <a href="#af0c451fdf40b3f070e91d2acf2dc7eb4">More...</a><br /></td></tr>
<tr class="separator:af0c451fdf40b3f070e91d2acf2dc7eb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d270b4f230b1b3db847e8e43e00e931"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a1d270b4f230b1b3db847e8e43e00e931">fetchStringList</a> (QStringList &amp;list) const</td></tr>
<tr class="memdesc:a1d270b4f230b1b3db847e8e43e00e931"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills QStringList with values fetched from current result row. SQL values converted to QString with QVariant::toString() method.  <a href="#a1d270b4f230b1b3db847e8e43e00e931">More...</a><br /></td></tr>
<tr class="separator:a1d270b4f230b1b3db847e8e43e00e931"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a6efef52d7a939622bbc934ff6b90ffe0"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a6efef52d7a939622bbc934ff6b90ffe0">Database</a></td></tr>
<tr class="separator:a6efef52d7a939622bbc934ff6b90ffe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49982aa325e19f0956d42fde9132caa2"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a49982aa325e19f0956d42fde9132caa2">Transaction</a></td></tr>
<tr class="separator:a49982aa325e19f0956d42fde9132caa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86948d67f912f2e3e6d1a2674cd0814e"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a86948d67f912f2e3e6d1a2674cd0814e">PreparedQuery</a></td></tr>
<tr class="separator:a86948d67f912f2e3e6d1a2674cd0814e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>QSqlQuery wrapper with handy data fetch methods. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a833c39c721b00c160c8a744bd58be0a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a833c39c721b00c160c8a744bd58be0a0">&#9670;&nbsp;</a></span>at()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int EasyQtSql::QueryResult::at </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the current internal position of the query. The first record is at position zero. </p>
<dl class="section return"><dt>Returns</dt><dd>If the position is invalid, the function returns QSql::BeforeFirstRow or QSql::AfterLastRow, which are special negative values.</dd></dl>
<p>Wrapper over QSqlQuery::at() </p>

</div>
</div>
<a id="a10971ce872fed637dad73c9ffe4681cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10971ce872fed637dad73c9ffe4681cf">&#9670;&nbsp;</a></span>boundValue() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariant EasyQtSql::QueryResult::boundValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>column</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value for the placeholder at position column. </p>
<p>Wrapper over QSqlQuery::boundValue() </p>

</div>
</div>
<a id="a4d619dd817888bc9179a7a37a3a6a515"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d619dd817888bc9179a7a37a3a6a515">&#9670;&nbsp;</a></span>boundValue() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariant EasyQtSql::QueryResult::boundValue </td>
          <td>(</td>
          <td class="paramtype">const QString &amp;&#160;</td>
          <td class="paramname"><em>aliasName</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value for the placeholder with aliasName. </p>
<p>Use subclasses of <a class="el" href="struct_easy_qt_sql_1_1_param_direction_wrapper.htm" title="Base parameters wrapper struct. ">ParamDirectionWrapper</a> class (<a class="el" href="struct_in.htm" title="Input SQL parameters wrapper. ">In</a>, <a class="el" href="struct_out.htm" title="Output SQL parameters wrapper. ">Out</a>, <a class="el" href="struct_in_out.htm" title="Bidirectional SQL parameters wrapper. ">InOut</a>) for aliased/directional parameter binding during <a class="el" href="class_easy_qt_sql_1_1_prepared_query.htm#a8b37cea455273109305cb8e621b169bf">PreparedQuery::exec</a> execution</p>
<p>Use <a class="el" href="struct_easy_qt_sql_1_1_out.htm" title="Output SQL parameters wrapper. ">Out</a> and <a class="el" href="struct_easy_qt_sql_1_1_in_out.htm" title="Bidirectional SQL parameters wrapper. ">InOut</a> wrappers if you need to read Stored Procedures return values (output parameters).</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_in.htm" title="Input SQL parameters wrapper. ">In</a>, <a class="el" href="struct_out.htm" title="Output SQL parameters wrapper. ">Out</a>, <a class="el" href="struct_in_out.htm" title="Bidirectional SQL parameters wrapper. ">InOut</a>, <a class="el" href="class_easy_qt_sql_1_1_prepared_query.htm#a8b37cea455273109305cb8e621b169bf">PreparedQuery::exec</a> </dd></dl>

</div>
</div>
<a id="ae45b225a9a7d64f9d151bc21c353275f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae45b225a9a7d64f9d151bc21c353275f">&#9670;&nbsp;</a></span>boundValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariantList EasyQtSql::QueryResult::boundValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns list of the bound values (with positional binding) </p>
<p>Wrapper over QSqlQuery::boundValues() </p>

</div>
</div>
<a id="abe5f540e13e57385fc57c8826b61816e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe5f540e13e57385fc57c8826b61816e">&#9670;&nbsp;</a></span>executedQuery()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QString EasyQtSql::QueryResult::executedQuery </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the last query that was successfully executed. </p>
<p>Wrapper over QSqlQuery::executedQuery() </p>

</div>
</div>
<a id="aaece06902097ce3275792c3b33c6dc2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaece06902097ce3275792c3b33c6dc2d">&#9670;&nbsp;</a></span>fetchGadget()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchGadget </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>gadget</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills Q_GADGET object properties with data fetched from current result row. </p>
<p>Qt Meta-Object System used. Only writable properties can be filled.</p>
<p>C++ struct fields will be mapped on SQL result table by Q_PROPERTY member names. For example, if Q_GADGET struct contains Q_PROPERTY named "e" but SELECT query defines no "e" column, object property "e" not affected by the method.</p>
<div class="fragment"><div class="line"><span class="keyword">struct </span>Row</div><div class="line">{</div><div class="line">   <span class="keywordtype">int</span> a;</div><div class="line">   <span class="keywordtype">int</span> b;</div><div class="line">   <span class="keywordtype">int</span> c;</div><div class="line">   QString d;</div><div class="line">   <span class="keywordtype">int</span> e;</div><div class="line"></div><div class="line"><span class="keyword">private</span>:</div><div class="line">   Q_GADGET</div><div class="line"></div><div class="line">   <span class="comment">//property &quot;a&quot; will be filled with &quot;a&quot; column of the Select SQL query result</span></div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> a MEMBER a)</div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> b MEMBER b)</div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> c MEMBER c)</div><div class="line">   Q_PROPERTY(QString d MEMBER d)</div><div class="line"></div><div class="line">   <span class="comment">//property e will be ignored in the example because there is no e field in the Select SQL query result</span></div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> e MEMBER e)</div><div class="line">};</div><div class="line"></div><div class="line"><span class="keywordtype">void</span> test()</div><div class="line">{</div><div class="line">   <a class="code" href="class_transaction.htm">Transaction</a> t;</div><div class="line">   <a class="code" href="class_query_result.htm">QueryResult</a> res = t.<a class="code" href="class_database.htm#a05c1ac255cdba9781f8bf306801bca70">execQuery</a>(<span class="stringliteral">&quot;SELECT a, b, c, d FROM table&quot;</span>);</div><div class="line"></div><div class="line">   <span class="keywordflow">while</span> (res.<a class="code" href="class_query_result.htm#a1c756382c20c126979b28715d529c054">next</a>())</div><div class="line">   {</div><div class="line">      <span class="comment">//Row instance (Q_GADGET structure)</span></div><div class="line">      Row testRow;</div><div class="line"></div><div class="line">      <span class="comment">//fetch testRow from current result row, properties a, b, c, d will be filled here:</span></div><div class="line">      res.<a class="code" href="class_query_result.htm#a53a94d8a3a9ca6916716d79b5fb48837">fetchGadget</a>(testRow);</div><div class="line">   }</div><div class="line">}</div></div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">gadget</td><td>Q_GADGET reference </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3aaa9b4e9c45e0a5c303f916c7ecee64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3aaa9b4e9c45e0a5c303f916c7ecee64">&#9670;&nbsp;</a></span>fetchList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchList </td>
          <td>(</td>
          <td class="paramtype">QVariantList &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills QVariantList with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">list</td><td>QVariantList </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a7bc07b088b7abea529171589c3bdce09" title="Returns QVariantList filled with values fetched from current result row. ">QueryResult::toList</a> </dd></dl>

</div>
</div>
<a id="aaf2dee4a21aed3b495ffc56de32a3fe0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf2dee4a21aed3b495ffc56de32a3fe0">&#9670;&nbsp;</a></span>fetchMap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchMap </td>
          <td>(</td>
          <td class="paramtype">QVariantMap &amp;&#160;</td>
          <td class="paramname"><em>map</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills QVariantMap with values fetched from current result row. Key is QString (result column name) and value is QVariant value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">map</td><td>QVariantMap </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a27809ada6725d479f31b66ebcbc7c95c" title="Returns QVariantMap filled with values fetched from current result row. Key is QString (result column...">QueryResult::toMap</a> </dd></dl>

</div>
</div>
<a id="a043b284c72b54c4a2871867196a67560"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a043b284c72b54c4a2871867196a67560">&#9670;&nbsp;</a></span>fetchObject()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchObject </td>
          <td>(</td>
          <td class="paramtype">QObject &amp;&#160;</td>
          <td class="paramname"><em>object</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills Q_OBJECT object properties with data fetched from current result row. </p>
<p>Qt Meta-Object System used. Only writable properties can be filled.</p>
<p>C++ class fields (properties) will be mapped on SQL result table by Q_PROPERTY member names. For example, if Q_OBJECT class contains Q_PROPERTY named "e" but SELECT query defines no "e" column, object property "e" not affected by the method.</p>
<div class="fragment"><div class="line"><span class="keyword">class </span>TestObject : <span class="keyword">public</span> QObject</div><div class="line">{</div><div class="line">   Q_OBJECT</div><div class="line"></div><div class="line">   <span class="comment">//property &quot;a&quot; will be filled with &quot;a&quot; column of the Select SQL query result</span></div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> a MEMBER a)</div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> b MEMBER b)</div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> c MEMBER c)</div><div class="line">   Q_PROPERTY(QString d MEMBER d)</div><div class="line"></div><div class="line">   <span class="comment">//property e will be ignored in the example because there is no e field in the Select SQL query result</span></div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> e MEMBER e)</div><div class="line"></div><div class="line"><span class="keyword">private</span>:</div><div class="line">   <span class="keywordtype">int</span> a;</div><div class="line">   <span class="keywordtype">int</span> b;</div><div class="line">   <span class="keywordtype">int</span> c;</div><div class="line">   QString d;</div><div class="line">   <span class="keywordtype">int</span> e;</div><div class="line">};</div><div class="line"></div><div class="line"><span class="keywordtype">void</span> test()</div><div class="line">{</div><div class="line">   <a class="code" href="class_transaction.htm">Transaction</a> t;</div><div class="line">   <a class="code" href="class_query_result.htm">QueryResult</a> res = t.<a class="code" href="class_database.htm#a05c1ac255cdba9781f8bf306801bca70">execQuery</a>(<span class="stringliteral">&quot;SELECT a, b, c, d FROM table&quot;</span>);</div><div class="line"></div><div class="line">   <span class="keywordflow">while</span> (res.<a class="code" href="class_query_result.htm#a1c756382c20c126979b28715d529c054">next</a>())</div><div class="line">   {</div><div class="line">      <span class="comment">//TestObject instance (Q_OBJECT class)</span></div><div class="line">      TestObject testRow;</div><div class="line">      res.<a class="code" href="class_query_result.htm#a79a40fde15ca3ceaa4f0c7b8ba649558">fetchObject</a>(testRow);</div><div class="line">   }</div><div class="line">}</div></div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">object</td><td>Q_OBJECT object reference </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1d270b4f230b1b3db847e8e43e00e931"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d270b4f230b1b3db847e8e43e00e931">&#9670;&nbsp;</a></span>fetchStringList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchStringList </td>
          <td>(</td>
          <td class="paramtype">QStringList &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills QStringList with values fetched from current result row. SQL values converted to QString with QVariant::toString() method. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">list</td><td>QStringList </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a152e0d75c2c149896955c3257ca08e7d" title="Returns QStringList filled with values fetched from current result row. SQL values converted to QStri...">QueryResult::toStringList</a> </dd></dl>

</div>
</div>
<a id="ab0dac0809b8eab8f066106391346dfb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0dac0809b8eab8f066106391346dfb4">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[1/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<p>The method has a variable number of parameters, which allows filling the list of variables with values from the current record in single call.</p>
<p>Overloaded <em>EasyQtSql::fetchVars</em> methods performs the corresponding type conversion with QVariant::to*() methods.</p>
<p>Supported parameter types: <em>int</em>, <em>double</em>, <em>bool</em>, <em>QString</em>, <em>QDate</em>, <em>QDateTime</em>, <em>QTime</em>, <em>QByteArray</em>, <em>QVariant</em>.</p>
<p>Variables of different types can be mixed.</p>
<div class="fragment"><div class="line"><a class="code" href="class_transaction.htm">Transaction</a> t;</div><div class="line"><a class="code" href="class_query_result.htm">QueryResult</a> res = t.<a class="code" href="class_database.htm#a05c1ac255cdba9781f8bf306801bca70">execQuery</a>(<span class="stringliteral">&quot;SELECT a, b, c, d FROM table&quot;</span>);</div><div class="line"></div><div class="line"><span class="keywordflow">while</span> (res.<a class="code" href="class_query_result.htm#a1c756382c20c126979b28715d529c054">next</a>())</div><div class="line">{</div><div class="line">   <span class="keywordtype">int</span> a;</div><div class="line">   <span class="keywordtype">bool</span> b;</div><div class="line">   QString c;</div><div class="line">   QDateTime d;</div><div class="line"></div><div class="line">   res.<a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(a, b, c, d);</div><div class="line">}</div></div><!-- fragment --><dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab0dac0809b8eab8f066106391346dfb4" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> , <a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a54796f80b1171f84c96f04d68ff3f687" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(double&amp;) const</a> , <a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a7240189d55b45580eb22a7c4891ffc0d" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QString&amp;) const</a> , <a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a971772dc3b77d7b37cb45453a559b400" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(bool&amp;) const</a> , <a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a16a8d3f9c94b8b258774562fcaabdbb6" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QDate&amp;) const</a> , <a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a502f74e4c044cf4a1469db35bde3b158" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QDateTime&amp;) const</a> , <a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ad5b172d80a6135ea6d7d33ee656100c5" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QTime&amp;) const</a> , <a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ae91953f034ff0f42e28d4775b3057404" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QByteArray&amp;) const</a> , <a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a62dc72615ea6a5f767cfc5e0a445008b" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QVariant&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a54796f80b1171f84c96f04d68ff3f687"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54796f80b1171f84c96f04d68ff3f687">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[2/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab0dac0809b8eab8f066106391346dfb4" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a7240189d55b45580eb22a7c4891ffc0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7240189d55b45580eb22a7c4891ffc0d">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[3/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QString &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab0dac0809b8eab8f066106391346dfb4" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a971772dc3b77d7b37cb45453a559b400"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a971772dc3b77d7b37cb45453a559b400">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[4/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab0dac0809b8eab8f066106391346dfb4" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a16a8d3f9c94b8b258774562fcaabdbb6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16a8d3f9c94b8b258774562fcaabdbb6">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[5/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QDate &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab0dac0809b8eab8f066106391346dfb4" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a502f74e4c044cf4a1469db35bde3b158"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a502f74e4c044cf4a1469db35bde3b158">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[6/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QDateTime &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab0dac0809b8eab8f066106391346dfb4" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="ad5b172d80a6135ea6d7d33ee656100c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5b172d80a6135ea6d7d33ee656100c5">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[7/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QTime &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab0dac0809b8eab8f066106391346dfb4" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="ae91953f034ff0f42e28d4775b3057404"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae91953f034ff0f42e28d4775b3057404">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[8/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QByteArray &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab0dac0809b8eab8f066106391346dfb4" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a62dc72615ea6a5f767cfc5e0a445008b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62dc72615ea6a5f767cfc5e0a445008b">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[9/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QVariant &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab0dac0809b8eab8f066106391346dfb4" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a0152c78a61e0580b1fbfd9da902aac23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0152c78a61e0580b1fbfd9da902aac23">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[10/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3c2f9d001255f0b8967a5047fa472b09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c2f9d001255f0b8967a5047fa472b09">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[11/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a58ecd7967c4befdc164c0bdaaa6f4121"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58ecd7967c4befdc164c0bdaaa6f4121">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[12/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QString &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afb95f5845ec36bf273b275e45418374b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb95f5845ec36bf273b275e45418374b">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[13/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1dd12aaf3dad417e24fc1a08c0fab8ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1dd12aaf3dad417e24fc1a08c0fab8ed">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[14/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QDate &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1d9856aaa98c27ae865d18f7270e4c61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d9856aaa98c27ae865d18f7270e4c61">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[15/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QDateTime &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a39ea9d3b1014c00d1fac339c05dd6e62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39ea9d3b1014c00d1fac339c05dd6e62">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[16/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QTime &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa1be09d31b9a2cc2ccaf81eca20f51b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1be09d31b9a2cc2ccaf81eca20f51b1">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[17/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QByteArray &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abf9c67bc75c07386d7234b2c0edcd0a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf9c67bc75c07386d7234b2c0edcd0a6">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[18/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QVariant &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af0c451fdf40b3f070e91d2acf2dc7eb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0c451fdf40b3f070e91d2acf2dc7eb4">&#9670;&nbsp;</a></span>fetchVector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void EasyQtSql::QueryResult::fetchVector </td>
          <td>(</td>
          <td class="paramtype">QVector&lt; QVariant &gt; &amp;&#160;</td>
          <td class="paramname"><em>vector</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills QVector&lt;QVariant&gt; with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">vector</td><td>QVector&lt;QVariant&gt; </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab713b1eed43ec3d4758beab0748882d3" title="Returns QVector&lt;QVariant&gt; filled with values fetched from current result row. SQL values not converte...">QueryResult::toVector</a> </dd></dl>

</div>
</div>
<a id="aa9bb9fdbc1ee460c6fc2b252100b62cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9bb9fdbc1ee460c6fc2b252100b62cf">&#9670;&nbsp;</a></span>first()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EasyQtSql::QueryResult::first </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the first record in the result, if available, and positions the query on the retrieved record. </p>
<p>Wrapper over QSqlQuery::first() </p>

</div>
</div>
<a id="a58ff79b8baf637e10a23a5b973bbf232"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58ff79b8baf637e10a23a5b973bbf232">&#9670;&nbsp;</a></span>isActive()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EasyQtSql::QueryResult::isActive </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if the query is active. An active QSqlQuery is one that has been exec()'d successfully but not yet finished with. </p>
<p>Wrapper over QSqlQuery::isActive() </p>

</div>
</div>
<a id="a1f2c89653608105ef1ea34962f08db34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f2c89653608105ef1ea34962f08db34">&#9670;&nbsp;</a></span>isForwardOnly()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EasyQtSql::QueryResult::isForwardOnly </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if you can only scroll forward through a result set; otherwise returns false. </p>
<p>Wrapper over QSqlQuery::isForwardOnly() </p>

</div>
</div>
<a id="a59d9dc03eba034c9dc22867235c5e728"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59d9dc03eba034c9dc22867235c5e728">&#9670;&nbsp;</a></span>isValid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EasyQtSql::QueryResult::isValid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if the query is currently positioned on a valid record; otherwise returns false. </p>
<p>Wrapper over QSqlQuery::isValid() </p>

</div>
</div>
<a id="ae2e079ad6bd6d1865848dd4073260d9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2e079ad6bd6d1865848dd4073260d9d">&#9670;&nbsp;</a></span>last()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EasyQtSql::QueryResult::last </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the last record in the result, if available, and positions the query on the retrieved record. </p>
<p>Wrapper over QSqlQuery::last() </p>

</div>
</div>
<a id="ab2a5f651570c3258165ad55a7c141186"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2a5f651570c3258165ad55a7c141186">&#9670;&nbsp;</a></span>lastError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QSqlError EasyQtSql::QueryResult::lastError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns error information about the last error (if any) that occurred with this query. </p>
<p>Wrapper over QSqlQuery::lastError() </p>

</div>
</div>
<a id="a20322bb72518c12159e0ffa9c6003e12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20322bb72518c12159e0ffa9c6003e12">&#9670;&nbsp;</a></span>lastQuery()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QString EasyQtSql::QueryResult::lastQuery </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the text of the current query being used, or an empty string if there is no current query text. </p>
<p>Wrapper over QSqlQuery::lastQuery() </p>

</div>
</div>
<a id="a3e1b0790cdb82a848f2b48ddc698001b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e1b0790cdb82a848f2b48ddc698001b">&#9670;&nbsp;</a></span>next()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EasyQtSql::QueryResult::next </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the next record in the result, if available, and positions the query on the retrieved record. </p>
<p>Wrapper over QSqlQuery::next() </p>

</div>
</div>
<a id="aa51ab0f7b9812106f0d9afda80bf1194"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa51ab0f7b9812106f0d9afda80bf1194">&#9670;&nbsp;</a></span>nextResult()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EasyQtSql::QueryResult::nextResult </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Discards the current result set and navigates to the next if available (if database is capable of returning multiple result sets) </p>
<p>Wrapper over QSqlQuery::nextResult() </p>

</div>
</div>
<a id="af277d176f33fce29dd0049d4b267912c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af277d176f33fce29dd0049d4b267912c">&#9670;&nbsp;</a></span>numRowsAffected()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int EasyQtSql::QueryResult::numRowsAffected </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of rows affected by the result's SQL statement, or -1 if it cannot be determined. </p>
<p>Wrapper over QSqlQuery::numRowsAffected() </p>

</div>
</div>
<a id="a118e2ac7aa817a6677b71eae61df3801"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a118e2ac7aa817a6677b71eae61df3801">&#9670;&nbsp;</a></span>parseToIntVector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVector&lt;int&gt; EasyQtSql::QueryResult::parseToIntVector </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>base</em> = <code>10</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>skipNullValues</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns vector of (optionally parsed) integer values from currently active result row. </p>
<p>Parsing with specified base will be performed if type of selected database field is String (varchar/text). Not successfully parsed string values are ignored.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">base</td><td>Number base to parse int values from SQL string values. </td></tr>
    <tr><td class="paramname">skipNullValues</td><td>Skip SQL NULL values. Resulting int value is 0 if skipNullValues = false. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6617545f5395115ff050005a5939c2a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6617545f5395115ff050005a5939c2a6">&#9670;&nbsp;</a></span>previous()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EasyQtSql::QueryResult::previous </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the previous record in the result, if available, and positions the query on the retrieved record. </p>
<p>Wrapper over QSqlQuery::previous() </p>

</div>
</div>
<a id="a46595f825d0fd0a5c765bc6d301fccb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46595f825d0fd0a5c765bc6d301fccb9">&#9670;&nbsp;</a></span>scalar() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T EasyQtSql::QueryResult::scalar </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns scalar value converted to type T (the value of the first column of the current row) </p>

</div>
</div>
<a id="aa859ae4f8e2093494f8b2849d6f4f842"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa859ae4f8e2093494f8b2849d6f4f842">&#9670;&nbsp;</a></span>scalar() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariant EasyQtSql::QueryResult::scalar </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns scalar value (the value of the first column of the current row) </p>

</div>
</div>
<a id="a0b1d233aa138f29eb2e5e9c1a04c8401"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b1d233aa138f29eb2e5e9c1a04c8401">&#9670;&nbsp;</a></span>seek()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EasyQtSql::QueryResult::seek </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>relative</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the record at position index, if available, and positions the query on the retrieved record. </p>
<p>Wrapper over QSqlQuery::seek() </p>

</div>
</div>
<a id="a9cd87f53f90c9061ab8d9ae66cf97e4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cd87f53f90c9061ab8d9ae66cf97e4a">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int EasyQtSql::QueryResult::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the size of the result (number of rows returned), or -1 if the size cannot be determined or if the database does not support reporting information about query sizes. </p>
<p>Wrapper over QSqlQuery::size() </p>

</div>
</div>
<a id="a7bc07b088b7abea529171589c3bdce09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bc07b088b7abea529171589c3bdce09">&#9670;&nbsp;</a></span>toList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariantList EasyQtSql::QueryResult::toList </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns QVariantList filled with values fetched from current result row. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a3aaa9b4e9c45e0a5c303f916c7ecee64" title="Fills QVariantList with values fetched from current result row. SQL values not converted: QSqlQuery::...">QueryResult::fetchList</a> </dd></dl>

</div>
</div>
<a id="a27809ada6725d479f31b66ebcbc7c95c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27809ada6725d479f31b66ebcbc7c95c">&#9670;&nbsp;</a></span>toMap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariantMap EasyQtSql::QueryResult::toMap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns QVariantMap filled with values fetched from current result row. Key is QString (result column name) and value is QVariant value. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#aaf2dee4a21aed3b495ffc56de32a3fe0" title="Fills QVariantMap with values fetched from current result row. Key is QString (result column name) an...">QueryResult::fetchMap</a> </dd></dl>

</div>
</div>
<a id="a152e0d75c2c149896955c3257ca08e7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a152e0d75c2c149896955c3257ca08e7d">&#9670;&nbsp;</a></span>toStringList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QStringList EasyQtSql::QueryResult::toStringList </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns QStringList filled with values fetched from current result row. SQL values converted to QString with QVariant::toString() method. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#a1d270b4f230b1b3db847e8e43e00e931" title="Fills QStringList with values fetched from current result row. SQL values converted to QString with Q...">QueryResult::fetchStringList()</a> </dd></dl>

</div>
</div>
<a id="ab713b1eed43ec3d4758beab0748882d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab713b1eed43ec3d4758beab0748882d3">&#9670;&nbsp;</a></span>toVector() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVector&lt;QVariant&gt; EasyQtSql::QueryResult::toVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns QVector&lt;QVariant&gt; filled with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#af0c451fdf40b3f070e91d2acf2dc7eb4" title="Fills QVector&lt;QVariant&gt; with values fetched from current result row. SQL values not converted: QSqlQu...">QueryResult::fetchVector</a> </dd></dl>

</div>
</div>
<a id="a44ef2a3f6f1bc01f0eabfc4ca4d54922"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44ef2a3f6f1bc01f0eabfc4ca4d54922">&#9670;&nbsp;</a></span>toVector() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVector&lt;T&gt; EasyQtSql::QueryResult::toVector </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>skipNullValues</em> = <code>false</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns QVector&lt;T&gt; filled with values fetched from current result row. SQL values converted with QVariant::value&lt;T&gt;(). QVector::canConvert&lt;T&gt;() method used for convertability check. Non-convertable values skipped. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">skipNullValues</td><td>Skip SQL NULL values. Resulting value is default value if skipNullValues = false. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_easy_qt_sql_1_1_query_result.htm#ab713b1eed43ec3d4758beab0748882d3" title="Returns QVector&lt;QVariant&gt; filled with values fetched from current result row. SQL values not converte...">QueryResult::toVector</a> </dd></dl>

</div>
</div>
<a id="a1537d10148632523112d5f3fc8a8de76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1537d10148632523112d5f3fc8a8de76">&#9670;&nbsp;</a></span>unwrappedQuery()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QSqlQuery&amp; EasyQtSql::QueryResult::unwrappedQuery </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns reference on wrapped QSqlQuery. </p>

</div>
</div>
<a id="a72fe9d306b5866c15f99a3a413d9ec16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72fe9d306b5866c15f99a3a413d9ec16">&#9670;&nbsp;</a></span>value() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariant EasyQtSql::QueryResult::value </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>column</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value of field index in the current record. </p>
<p>Wrapper over QSqlQuery::value() </p>

</div>
</div>
<a id="a507339724a5bc10e3f5eeab709885b4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a507339724a5bc10e3f5eeab709885b4a">&#9670;&nbsp;</a></span>value() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariant EasyQtSql::QueryResult::value </td>
          <td>(</td>
          <td class="paramtype">const QString &amp;&#160;</td>
          <td class="paramname"><em>colName</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value of the field called name in the current record. If field name does not exist an invalid variant is returned. </p>
<p>Wrapper over QSqlQuery::value() </p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a6efef52d7a939622bbc934ff6b90ffe0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6efef52d7a939622bbc934ff6b90ffe0">&#9670;&nbsp;</a></span>Database</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_easy_qt_sql_1_1_database.htm">Database</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a86948d67f912f2e3e6d1a2674cd0814e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86948d67f912f2e3e6d1a2674cd0814e">&#9670;&nbsp;</a></span>PreparedQuery</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_easy_qt_sql_1_1_prepared_query.htm">PreparedQuery</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a49982aa325e19f0956d42fde9132caa2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49982aa325e19f0956d42fde9132caa2">&#9670;&nbsp;</a></span>Transaction</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_easy_qt_sql_1_1_transaction.htm">Transaction</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>EasyQtSql/<a class="el" href="_easy_qt_sql_8h_source.htm">EasyQtSql.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_easy_qt_sql.htm">EasyQtSql</a></li><li class="navelem"><a class="el" href="class_easy_qt_sql_1_1_query_result.htm">QueryResult</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.14 </li>
  </ul>
</div>
</body>
</html>
