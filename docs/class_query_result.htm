<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>EasyQtSql: QueryResult Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">EasyQtSql
   </div>
   <div id="projectbrief">Easy SQL data access helper for QtSql</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_query_result.htm','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="class_query_result-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">QueryResult Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>QSqlQuery wrapper with handy data fetch methods.  
 <a href="class_query_result.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_easy_qt_sql___query_result_8h_source.htm">EasyQtSql_QueryResult.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afcffce24fb54a5b94c74d304a36fc317"><td class="memItemLeft" align="right" valign="top">QSqlQuery &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#afcffce24fb54a5b94c74d304a36fc317">unwrappedQuery</a> ()</td></tr>
<tr class="memdesc:afcffce24fb54a5b94c74d304a36fc317"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns reference on wrapped QSqlQuery.  <a href="#afcffce24fb54a5b94c74d304a36fc317">More...</a><br /></td></tr>
<tr class="separator:afcffce24fb54a5b94c74d304a36fc317"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c756382c20c126979b28715d529c054"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a1c756382c20c126979b28715d529c054">next</a> ()</td></tr>
<tr class="memdesc:a1c756382c20c126979b28715d529c054"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the next record in the result, if available, and positions the query on the retrieved record.  <a href="#a1c756382c20c126979b28715d529c054">More...</a><br /></td></tr>
<tr class="separator:a1c756382c20c126979b28715d529c054"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9325bfaca721378e6bafa50fd7839197"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a9325bfaca721378e6bafa50fd7839197">previous</a> ()</td></tr>
<tr class="memdesc:a9325bfaca721378e6bafa50fd7839197"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the previous record in the result, if available, and positions the query on the retrieved record.  <a href="#a9325bfaca721378e6bafa50fd7839197">More...</a><br /></td></tr>
<tr class="separator:a9325bfaca721378e6bafa50fd7839197"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ed922784c015b27b7fb53fafb10b391"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a9ed922784c015b27b7fb53fafb10b391">nextResult</a> ()</td></tr>
<tr class="memdesc:a9ed922784c015b27b7fb53fafb10b391"><td class="mdescLeft">&#160;</td><td class="mdescRight">Discards the current result set and navigates to the next if available (if database is capable of returning multiple result sets)  <a href="#a9ed922784c015b27b7fb53fafb10b391">More...</a><br /></td></tr>
<tr class="separator:a9ed922784c015b27b7fb53fafb10b391"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a406abd3501b2f3d89bf6bb7e5e8cd7c3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a406abd3501b2f3d89bf6bb7e5e8cd7c3">first</a> ()</td></tr>
<tr class="memdesc:a406abd3501b2f3d89bf6bb7e5e8cd7c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the first record in the result, if available, and positions the query on the retrieved record.  <a href="#a406abd3501b2f3d89bf6bb7e5e8cd7c3">More...</a><br /></td></tr>
<tr class="separator:a406abd3501b2f3d89bf6bb7e5e8cd7c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e5a5d108da1d03b0f624e18330a10f5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a0e5a5d108da1d03b0f624e18330a10f5">last</a> ()</td></tr>
<tr class="memdesc:a0e5a5d108da1d03b0f624e18330a10f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the last record in the result, if available, and positions the query on the retrieved record.  <a href="#a0e5a5d108da1d03b0f624e18330a10f5">More...</a><br /></td></tr>
<tr class="separator:a0e5a5d108da1d03b0f624e18330a10f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff65a998f1c8be8c1dd630438a820158"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#aff65a998f1c8be8c1dd630438a820158">seek</a> (int index, bool relative=false)</td></tr>
<tr class="memdesc:aff65a998f1c8be8c1dd630438a820158"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the record at position index, if available, and positions the query on the retrieved record.  <a href="#aff65a998f1c8be8c1dd630438a820158">More...</a><br /></td></tr>
<tr class="separator:aff65a998f1c8be8c1dd630438a820158"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af49cf244de53dd4340b486990f38c553"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#af49cf244de53dd4340b486990f38c553">at</a> () const</td></tr>
<tr class="memdesc:af49cf244de53dd4340b486990f38c553"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current internal position of the query. The first record is at position zero.  <a href="#af49cf244de53dd4340b486990f38c553">More...</a><br /></td></tr>
<tr class="separator:af49cf244de53dd4340b486990f38c553"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46b374177ab23d8f9d7dc9366eb57655"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a46b374177ab23d8f9d7dc9366eb57655">isActive</a> () const</td></tr>
<tr class="memdesc:a46b374177ab23d8f9d7dc9366eb57655"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the query is active. An active QSqlQuery is one that has been exec()'d successfully but not yet finished with.  <a href="#a46b374177ab23d8f9d7dc9366eb57655">More...</a><br /></td></tr>
<tr class="separator:a46b374177ab23d8f9d7dc9366eb57655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9ec64a1171aba3f7cef8b081c8158be"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#ae9ec64a1171aba3f7cef8b081c8158be">isValid</a> () const</td></tr>
<tr class="memdesc:ae9ec64a1171aba3f7cef8b081c8158be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the query is currently positioned on a valid record; otherwise returns false.  <a href="#ae9ec64a1171aba3f7cef8b081c8158be">More...</a><br /></td></tr>
<tr class="separator:ae9ec64a1171aba3f7cef8b081c8158be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b6ef75a4da642c0c467d0110ce1701a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a5b6ef75a4da642c0c467d0110ce1701a">isForwardOnly</a> () const</td></tr>
<tr class="memdesc:a5b6ef75a4da642c0c467d0110ce1701a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if you can only scroll forward through a result set; otherwise returns false.  <a href="#a5b6ef75a4da642c0c467d0110ce1701a">More...</a><br /></td></tr>
<tr class="separator:a5b6ef75a4da642c0c467d0110ce1701a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad46ba52de7f43f45c19d4b7eecabca4b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#ad46ba52de7f43f45c19d4b7eecabca4b">size</a> () const</td></tr>
<tr class="memdesc:ad46ba52de7f43f45c19d4b7eecabca4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the size of the result (number of rows returned), or -1 if the size cannot be determined or if the database does not support reporting information about query sizes.  <a href="#ad46ba52de7f43f45c19d4b7eecabca4b">More...</a><br /></td></tr>
<tr class="separator:ad46ba52de7f43f45c19d4b7eecabca4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26baf17cd661ec312918f660ac9e4b1a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a26baf17cd661ec312918f660ac9e4b1a">numRowsAffected</a> () const</td></tr>
<tr class="memdesc:a26baf17cd661ec312918f660ac9e4b1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of rows affected by the result's SQL statement, or -1 if it cannot be determined.  <a href="#a26baf17cd661ec312918f660ac9e4b1a">More...</a><br /></td></tr>
<tr class="separator:a26baf17cd661ec312918f660ac9e4b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac56dbe38b558a9e55591f645d50eacde"><td class="memItemLeft" align="right" valign="top">QSqlError&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#ac56dbe38b558a9e55591f645d50eacde">lastError</a> () const</td></tr>
<tr class="memdesc:ac56dbe38b558a9e55591f645d50eacde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns error information about the last error (if any) that occurred with this query.  <a href="#ac56dbe38b558a9e55591f645d50eacde">More...</a><br /></td></tr>
<tr class="separator:ac56dbe38b558a9e55591f645d50eacde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af86eb1e97db39a70d504389494e2b329"><td class="memItemLeft" align="right" valign="top">QString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#af86eb1e97db39a70d504389494e2b329">lastQuery</a> () const</td></tr>
<tr class="memdesc:af86eb1e97db39a70d504389494e2b329"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the text of the current query being used, or an empty string if there is no current query text.  <a href="#af86eb1e97db39a70d504389494e2b329">More...</a><br /></td></tr>
<tr class="separator:af86eb1e97db39a70d504389494e2b329"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfc27e5ad56a2da113bdb804b3fd682c"><td class="memItemLeft" align="right" valign="top">QString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#abfc27e5ad56a2da113bdb804b3fd682c">executedQuery</a> () const</td></tr>
<tr class="memdesc:abfc27e5ad56a2da113bdb804b3fd682c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last query that was successfully executed.  <a href="#abfc27e5ad56a2da113bdb804b3fd682c">More...</a><br /></td></tr>
<tr class="separator:abfc27e5ad56a2da113bdb804b3fd682c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74350f3ed705c8768bd748fe942438de"><td class="memItemLeft" align="right" valign="top">QVariant&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a> (int column) const</td></tr>
<tr class="memdesc:a74350f3ed705c8768bd748fe942438de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of field index in the current record.  <a href="#a74350f3ed705c8768bd748fe942438de">More...</a><br /></td></tr>
<tr class="separator:a74350f3ed705c8768bd748fe942438de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90ec24d07326aaa31e5372cfa377c985"><td class="memItemLeft" align="right" valign="top">QVariant&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a90ec24d07326aaa31e5372cfa377c985">value</a> (const QString &amp;colName) const</td></tr>
<tr class="memdesc:a90ec24d07326aaa31e5372cfa377c985"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of the field called name in the current record. If field name does not exist an invalid variant is returned.  <a href="#a90ec24d07326aaa31e5372cfa377c985">More...</a><br /></td></tr>
<tr class="separator:a90ec24d07326aaa31e5372cfa377c985"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad09b4730fecad00984e32e7f3defa76e"><td class="memItemLeft" align="right" valign="top">QVariant&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#ad09b4730fecad00984e32e7f3defa76e">boundValue</a> (int column) const</td></tr>
<tr class="memdesc:ad09b4730fecad00984e32e7f3defa76e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value for the placeholder at position column.  <a href="#ad09b4730fecad00984e32e7f3defa76e">More...</a><br /></td></tr>
<tr class="separator:ad09b4730fecad00984e32e7f3defa76e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e9ea76bfa4a3770e0ea885c797b5729"><td class="memItemLeft" align="right" valign="top">QVariant&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a9e9ea76bfa4a3770e0ea885c797b5729">boundValue</a> (const QString &amp;aliasName) const</td></tr>
<tr class="memdesc:a9e9ea76bfa4a3770e0ea885c797b5729"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value for the placeholder with aliasName.  <a href="#a9e9ea76bfa4a3770e0ea885c797b5729">More...</a><br /></td></tr>
<tr class="separator:a9e9ea76bfa4a3770e0ea885c797b5729"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a540f4948af295e336c58a6fe30e48c0b"><td class="memItemLeft" align="right" valign="top">QVariantList&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a540f4948af295e336c58a6fe30e48c0b">boundValues</a> () const</td></tr>
<tr class="memdesc:a540f4948af295e336c58a6fe30e48c0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns list of the bound values (with positional binding)  <a href="#a540f4948af295e336c58a6fe30e48c0b">More...</a><br /></td></tr>
<tr class="separator:a540f4948af295e336c58a6fe30e48c0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a023bd84f7010368d616d7dbb1b399a06"><td class="memItemLeft" align="right" valign="top">QVariantMap&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a023bd84f7010368d616d7dbb1b399a06">toMap</a> () const</td></tr>
<tr class="memdesc:a023bd84f7010368d616d7dbb1b399a06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns QVariantMap filled with values fetched from current result row. Key is QString (result column name) and value is QVariant value.  <a href="#a023bd84f7010368d616d7dbb1b399a06">More...</a><br /></td></tr>
<tr class="separator:a023bd84f7010368d616d7dbb1b399a06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1595196bd3fd72c9ee95c6c0a82f711"><td class="memItemLeft" align="right" valign="top">QVariantList&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#aa1595196bd3fd72c9ee95c6c0a82f711">toList</a> () const</td></tr>
<tr class="memdesc:aa1595196bd3fd72c9ee95c6c0a82f711"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns QVariantList filled with values fetched from current result row.  <a href="#aa1595196bd3fd72c9ee95c6c0a82f711">More...</a><br /></td></tr>
<tr class="separator:aa1595196bd3fd72c9ee95c6c0a82f711"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6831da3d942ccf741984f72d1d2eb57d"><td class="memItemLeft" align="right" valign="top">QStringList&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a6831da3d942ccf741984f72d1d2eb57d">toStringList</a> () const</td></tr>
<tr class="memdesc:a6831da3d942ccf741984f72d1d2eb57d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns QStringList filled with values fetched from current result row. SQL values converted to QString with QVariant::toString() method.  <a href="#a6831da3d942ccf741984f72d1d2eb57d">More...</a><br /></td></tr>
<tr class="separator:a6831da3d942ccf741984f72d1d2eb57d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bebffe22ed2f023ef7c9540aa9164ea"><td class="memItemLeft" align="right" valign="top">QVector&lt; QVariant &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a9bebffe22ed2f023ef7c9540aa9164ea">toVector</a> () const</td></tr>
<tr class="memdesc:a9bebffe22ed2f023ef7c9540aa9164ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns QVector&lt;QVariant&gt; filled with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used.  <a href="#a9bebffe22ed2f023ef7c9540aa9164ea">More...</a><br /></td></tr>
<tr class="separator:a9bebffe22ed2f023ef7c9540aa9164ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4f8c874ffb9e6b1285a69322aec61ea"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa4f8c874ffb9e6b1285a69322aec61ea"><td class="memTemplItemLeft" align="right" valign="top">QVector&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#aa4f8c874ffb9e6b1285a69322aec61ea">toVector</a> (bool skipNullValues=false) const</td></tr>
<tr class="memdesc:aa4f8c874ffb9e6b1285a69322aec61ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns QVector&lt;T&gt; filled with values fetched from current result row. SQL values converted with QVariant::value&lt;T&gt;(). QVector::canConvert&lt;T&gt;() method used for convertability check. Non-convertable values skipped.  <a href="#aa4f8c874ffb9e6b1285a69322aec61ea">More...</a><br /></td></tr>
<tr class="separator:aa4f8c874ffb9e6b1285a69322aec61ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22bd0f401bbcc203adb03b874ef2c5d8"><td class="memItemLeft" align="right" valign="top">QVector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a22bd0f401bbcc203adb03b874ef2c5d8">parseToIntVector</a> (int base=10, bool skipNullValues=false) const</td></tr>
<tr class="memdesc:a22bd0f401bbcc203adb03b874ef2c5d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns vector of (optionally parsed) integer values from currently active result row.  <a href="#a22bd0f401bbcc203adb03b874ef2c5d8">More...</a><br /></td></tr>
<tr class="separator:a22bd0f401bbcc203adb03b874ef2c5d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e3b49cb821efecac406606d9e3adb13"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5e3b49cb821efecac406606d9e3adb13"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a5e3b49cb821efecac406606d9e3adb13">scalar</a> () const</td></tr>
<tr class="memdesc:a5e3b49cb821efecac406606d9e3adb13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns scalar value converted to type T (the value of the first column of the current row)  <a href="#a5e3b49cb821efecac406606d9e3adb13">More...</a><br /></td></tr>
<tr class="separator:a5e3b49cb821efecac406606d9e3adb13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd683e71de31fbcf8e74e22249597322"><td class="memItemLeft" align="right" valign="top">QVariant&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#abd683e71de31fbcf8e74e22249597322">scalar</a> () const</td></tr>
<tr class="memdesc:abd683e71de31fbcf8e74e22249597322"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns scalar value (the value of the first column of the current row)  <a href="#abd683e71de31fbcf8e74e22249597322">More...</a><br /></td></tr>
<tr class="separator:abd683e71de31fbcf8e74e22249597322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d6642a5d017d6f99e0f5cb06d6740ca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a> (int &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>) const</td></tr>
<tr class="memdesc:a0d6642a5d017d6f99e0f5cb06d6740ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a0d6642a5d017d6f99e0f5cb06d6740ca">More...</a><br /></td></tr>
<tr class="separator:a0d6642a5d017d6f99e0f5cb06d6740ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac77eccf0a47750e309e11e7e66bb2d8a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#ac77eccf0a47750e309e11e7e66bb2d8a">fetchVars</a> (double &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>) const</td></tr>
<tr class="memdesc:ac77eccf0a47750e309e11e7e66bb2d8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#ac77eccf0a47750e309e11e7e66bb2d8a">More...</a><br /></td></tr>
<tr class="separator:ac77eccf0a47750e309e11e7e66bb2d8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a43faec4675b58bd0506a4de7c3976f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a1a43faec4675b58bd0506a4de7c3976f">fetchVars</a> (QString &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>) const</td></tr>
<tr class="memdesc:a1a43faec4675b58bd0506a4de7c3976f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a1a43faec4675b58bd0506a4de7c3976f">More...</a><br /></td></tr>
<tr class="separator:a1a43faec4675b58bd0506a4de7c3976f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af49ff273eb3efd184ca423df846ba507"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#af49ff273eb3efd184ca423df846ba507">fetchVars</a> (bool &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>) const</td></tr>
<tr class="memdesc:af49ff273eb3efd184ca423df846ba507"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#af49ff273eb3efd184ca423df846ba507">More...</a><br /></td></tr>
<tr class="separator:af49ff273eb3efd184ca423df846ba507"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50a5fa4850f774f301ed88a488a44726"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a50a5fa4850f774f301ed88a488a44726">fetchVars</a> (QDate &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>) const</td></tr>
<tr class="memdesc:a50a5fa4850f774f301ed88a488a44726"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a50a5fa4850f774f301ed88a488a44726">More...</a><br /></td></tr>
<tr class="separator:a50a5fa4850f774f301ed88a488a44726"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91d15081bc1d6eccefe089f4948438cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a91d15081bc1d6eccefe089f4948438cb">fetchVars</a> (QDateTime &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>) const</td></tr>
<tr class="memdesc:a91d15081bc1d6eccefe089f4948438cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a91d15081bc1d6eccefe089f4948438cb">More...</a><br /></td></tr>
<tr class="separator:a91d15081bc1d6eccefe089f4948438cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2870c71cd1b750c8151a7b4420903fa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#af2870c71cd1b750c8151a7b4420903fa">fetchVars</a> (QTime &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>) const</td></tr>
<tr class="memdesc:af2870c71cd1b750c8151a7b4420903fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#af2870c71cd1b750c8151a7b4420903fa">More...</a><br /></td></tr>
<tr class="separator:af2870c71cd1b750c8151a7b4420903fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaeb262416e472885dc6a3c7c3c7c3306"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#aaeb262416e472885dc6a3c7c3c7c3306">fetchVars</a> (QByteArray &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>) const</td></tr>
<tr class="memdesc:aaeb262416e472885dc6a3c7c3c7c3306"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#aaeb262416e472885dc6a3c7c3c7c3306">More...</a><br /></td></tr>
<tr class="separator:aaeb262416e472885dc6a3c7c3c7c3306"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c17bed4e4380137912a2baba19e5a30"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a8c17bed4e4380137912a2baba19e5a30">fetchVars</a> (QVariant &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>) const</td></tr>
<tr class="memdesc:a8c17bed4e4380137912a2baba19e5a30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a variable the value from the current record.  <a href="#a8c17bed4e4380137912a2baba19e5a30">More...</a><br /></td></tr>
<tr class="separator:a8c17bed4e4380137912a2baba19e5a30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5421dce74a177933675ede65a68972a0"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a5421dce74a177933675ede65a68972a0"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a5421dce74a177933675ede65a68972a0">fetchVars</a> (int &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a5421dce74a177933675ede65a68972a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b82a02ab7a45f1092e93d56a87dc67b"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a0b82a02ab7a45f1092e93d56a87dc67b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a0b82a02ab7a45f1092e93d56a87dc67b">fetchVars</a> (double &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a0b82a02ab7a45f1092e93d56a87dc67b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf30d6c095e00eb7b1bc942563597d4b"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:acf30d6c095e00eb7b1bc942563597d4b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#acf30d6c095e00eb7b1bc942563597d4b">fetchVars</a> (QString &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:acf30d6c095e00eb7b1bc942563597d4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa62c42135a62658a7e56426a024d0146"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:aa62c42135a62658a7e56426a024d0146"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#aa62c42135a62658a7e56426a024d0146">fetchVars</a> (bool &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:aa62c42135a62658a7e56426a024d0146"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadabff776f939dd7c3895318396ae59e"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:aadabff776f939dd7c3895318396ae59e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#aadabff776f939dd7c3895318396ae59e">fetchVars</a> (QDate &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:aadabff776f939dd7c3895318396ae59e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab68396b876b689f21109301cf350ee3"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:aab68396b876b689f21109301cf350ee3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#aab68396b876b689f21109301cf350ee3">fetchVars</a> (QDateTime &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:aab68396b876b689f21109301cf350ee3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462dc42f451155eca3b56b9239cf8535"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a462dc42f451155eca3b56b9239cf8535"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a462dc42f451155eca3b56b9239cf8535">fetchVars</a> (QTime &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a462dc42f451155eca3b56b9239cf8535"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5efedd7a6e170ddeaddbac5428951085"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a5efedd7a6e170ddeaddbac5428951085"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a5efedd7a6e170ddeaddbac5428951085">fetchVars</a> (QByteArray &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a5efedd7a6e170ddeaddbac5428951085"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a381517b5fa64a68e4d10972b0ceefc"><td class="memTemplParams" colspan="2">template&lt;typename... Rest&gt; </td></tr>
<tr class="memitem:a0a381517b5fa64a68e4d10972b0ceefc"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a0a381517b5fa64a68e4d10972b0ceefc">fetchVars</a> (QVariant &amp;<a class="el" href="class_query_result.htm#a74350f3ed705c8768bd748fe942438de">value</a>, Rest &amp;... rest) const</td></tr>
<tr class="separator:a0a381517b5fa64a68e4d10972b0ceefc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79a40fde15ca3ceaa4f0c7b8ba649558"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a79a40fde15ca3ceaa4f0c7b8ba649558">fetchObject</a> (QObject &amp;object) const</td></tr>
<tr class="memdesc:a79a40fde15ca3ceaa4f0c7b8ba649558"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills Q_OBJECT object properties with data fetched from current result row.  <a href="#a79a40fde15ca3ceaa4f0c7b8ba649558">More...</a><br /></td></tr>
<tr class="separator:a79a40fde15ca3ceaa4f0c7b8ba649558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53a94d8a3a9ca6916716d79b5fb48837"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a53a94d8a3a9ca6916716d79b5fb48837"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a53a94d8a3a9ca6916716d79b5fb48837">fetchGadget</a> (T &amp;gadget) const</td></tr>
<tr class="memdesc:a53a94d8a3a9ca6916716d79b5fb48837"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills Q_GADGET object properties with data fetched from current result row.  <a href="#a53a94d8a3a9ca6916716d79b5fb48837">More...</a><br /></td></tr>
<tr class="separator:a53a94d8a3a9ca6916716d79b5fb48837"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f79c838a9fcd4a5d48e61abc79612e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a0f79c838a9fcd4a5d48e61abc79612e9">fetchMap</a> (QVariantMap &amp;map) const</td></tr>
<tr class="memdesc:a0f79c838a9fcd4a5d48e61abc79612e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills QVariantMap with values fetched from current result row. Key is QString (result column name) and value is QVariant value.  <a href="#a0f79c838a9fcd4a5d48e61abc79612e9">More...</a><br /></td></tr>
<tr class="separator:a0f79c838a9fcd4a5d48e61abc79612e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af62abbe3a59c25163c90e4a5fec632c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#af62abbe3a59c25163c90e4a5fec632c7">fetchList</a> (QVariantList &amp;list) const</td></tr>
<tr class="memdesc:af62abbe3a59c25163c90e4a5fec632c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills QVariantList with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used.  <a href="#af62abbe3a59c25163c90e4a5fec632c7">More...</a><br /></td></tr>
<tr class="separator:af62abbe3a59c25163c90e4a5fec632c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad111370ab183d4d6a1522123c03f183d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#ad111370ab183d4d6a1522123c03f183d">fetchVector</a> (QVector&lt; QVariant &gt; &amp;vector) const</td></tr>
<tr class="memdesc:ad111370ab183d4d6a1522123c03f183d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills QVector&lt;QVariant&gt; with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used.  <a href="#ad111370ab183d4d6a1522123c03f183d">More...</a><br /></td></tr>
<tr class="separator:ad111370ab183d4d6a1522123c03f183d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af49aaa8a26876c7a095326c8b2d5ba6a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#af49aaa8a26876c7a095326c8b2d5ba6a">fetchStringList</a> (QStringList &amp;list) const</td></tr>
<tr class="memdesc:af49aaa8a26876c7a095326c8b2d5ba6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills QStringList with values fetched from current result row. SQL values converted to QString with QVariant::toString() method.  <a href="#af49aaa8a26876c7a095326c8b2d5ba6a">More...</a><br /></td></tr>
<tr class="separator:af49aaa8a26876c7a095326c8b2d5ba6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a6efef52d7a939622bbc934ff6b90ffe0"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a6efef52d7a939622bbc934ff6b90ffe0">Database</a></td></tr>
<tr class="separator:a6efef52d7a939622bbc934ff6b90ffe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49982aa325e19f0956d42fde9132caa2"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a49982aa325e19f0956d42fde9132caa2">Transaction</a></td></tr>
<tr class="separator:a49982aa325e19f0956d42fde9132caa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86948d67f912f2e3e6d1a2674cd0814e"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_query_result.htm#a86948d67f912f2e3e6d1a2674cd0814e">PreparedQuery</a></td></tr>
<tr class="separator:a86948d67f912f2e3e6d1a2674cd0814e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>QSqlQuery wrapper with handy data fetch methods. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="af49cf244de53dd4340b486990f38c553"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af49cf244de53dd4340b486990f38c553">&#9670;&nbsp;</a></span>at()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int QueryResult::at </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the current internal position of the query. The first record is at position zero. </p>
<dl class="section return"><dt>Returns</dt><dd>If the position is invalid, the function returns QSql::BeforeFirstRow or QSql::AfterLastRow, which are special negative values.</dd></dl>
<p>Wrapper over QSqlQuery::at() </p>

</div>
</div>
<a id="ad09b4730fecad00984e32e7f3defa76e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad09b4730fecad00984e32e7f3defa76e">&#9670;&nbsp;</a></span>boundValue() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariant QueryResult::boundValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>column</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value for the placeholder at position column. </p>
<p>Wrapper over QSqlQuery::boundValue() </p>

</div>
</div>
<a id="a9e9ea76bfa4a3770e0ea885c797b5729"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e9ea76bfa4a3770e0ea885c797b5729">&#9670;&nbsp;</a></span>boundValue() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariant QueryResult::boundValue </td>
          <td>(</td>
          <td class="paramtype">const QString &amp;&#160;</td>
          <td class="paramname"><em>aliasName</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value for the placeholder with aliasName. </p>
<p>Use subclasses of <a class="el" href="struct_param_direction_wrapper.htm" title="Base parameters wrapper struct. ">ParamDirectionWrapper</a> class (<a class="el" href="struct_in.htm" title="Input SQL parameters wrapper. ">In</a>, <a class="el" href="struct_out.htm" title="Output SQL parameters wrapper. ">Out</a>, <a class="el" href="struct_in_out.htm" title="Bidirectional SQL parameters wrapper. ">InOut</a>) for aliased/directional parameter binding during <a class="el" href="class_prepared_query.htm#a1013aea1638d6d04868ce39130bc1b67">PreparedQuery::exec</a> execution</p>
<p>Use <a class="el" href="struct_out.htm" title="Output SQL parameters wrapper. ">Out</a> and <a class="el" href="struct_in_out.htm" title="Bidirectional SQL parameters wrapper. ">InOut</a> wrappers if you need to read Stored Procedures return values (output parameters).</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_in.htm" title="Input SQL parameters wrapper. ">In</a>, <a class="el" href="struct_out.htm" title="Output SQL parameters wrapper. ">Out</a>, <a class="el" href="struct_in_out.htm" title="Bidirectional SQL parameters wrapper. ">InOut</a>, <a class="el" href="class_prepared_query.htm#a1013aea1638d6d04868ce39130bc1b67">PreparedQuery::exec</a> </dd></dl>

</div>
</div>
<a id="a540f4948af295e336c58a6fe30e48c0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a540f4948af295e336c58a6fe30e48c0b">&#9670;&nbsp;</a></span>boundValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariantList QueryResult::boundValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns list of the bound values (with positional binding) </p>
<p>Wrapper over QSqlQuery::boundValues() </p>

</div>
</div>
<a id="abfc27e5ad56a2da113bdb804b3fd682c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfc27e5ad56a2da113bdb804b3fd682c">&#9670;&nbsp;</a></span>executedQuery()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QString QueryResult::executedQuery </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the last query that was successfully executed. </p>
<p>Wrapper over QSqlQuery::executedQuery() </p>

</div>
</div>
<a id="a53a94d8a3a9ca6916716d79b5fb48837"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53a94d8a3a9ca6916716d79b5fb48837">&#9670;&nbsp;</a></span>fetchGadget()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchGadget </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>gadget</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills Q_GADGET object properties with data fetched from current result row. </p>
<p>Qt Meta-Object System used. Only writable properties can be filled.</p>
<p>C++ struct fields will be mapped on SQL result table by Q_PROPERTY member names. For example, if Q_GADGET struct contains Q_PROPERTY named "e" but SELECT query defines no "e" column, object property "e" not affected by the method.</p>
<div class="fragment"><div class="line"><span class="keyword">struct </span>Row</div><div class="line">{</div><div class="line">   <span class="keywordtype">int</span> a;</div><div class="line">   <span class="keywordtype">int</span> b;</div><div class="line">   <span class="keywordtype">int</span> c;</div><div class="line">   QString d;</div><div class="line">   <span class="keywordtype">int</span> e;</div><div class="line"></div><div class="line"><span class="keyword">private</span>:</div><div class="line">   Q_GADGET</div><div class="line"></div><div class="line">   <span class="comment">//property &quot;a&quot; will be filled with &quot;a&quot; column of the Select SQL query result</span></div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> a MEMBER a)</div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> b MEMBER b)</div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> c MEMBER c)</div><div class="line">   Q_PROPERTY(QString d MEMBER d)</div><div class="line"></div><div class="line">   <span class="comment">//property e will be ignored in the example because there is no e field in the Select SQL query result</span></div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> e MEMBER e)</div><div class="line">};</div><div class="line"></div><div class="line"><span class="keywordtype">void</span> test()</div><div class="line">{</div><div class="line">   <a class="code" href="class_transaction.htm">Transaction</a> t;</div><div class="line">   <a class="code" href="class_query_result.htm">QueryResult</a> res = t.<a class="code" href="class_database.htm#a05c1ac255cdba9781f8bf306801bca70">execQuery</a>(<span class="stringliteral">&quot;SELECT a, b, c, d FROM table&quot;</span>);</div><div class="line"></div><div class="line">   <span class="keywordflow">while</span> (res.<a class="code" href="class_query_result.htm#a1c756382c20c126979b28715d529c054">next</a>())</div><div class="line">   {</div><div class="line">      <span class="comment">//Row instance (Q_GADGET structure)</span></div><div class="line">      Row testRow;</div><div class="line"></div><div class="line">      <span class="comment">//fetch testRow from current result row, properties a, b, c, d will be filled here:</span></div><div class="line">      res.<a class="code" href="class_query_result.htm#a53a94d8a3a9ca6916716d79b5fb48837">fetchGadget</a>(testRow);</div><div class="line">   }</div><div class="line">}</div></div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">gadget</td><td>Q_GADGET reference </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af62abbe3a59c25163c90e4a5fec632c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af62abbe3a59c25163c90e4a5fec632c7">&#9670;&nbsp;</a></span>fetchList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchList </td>
          <td>(</td>
          <td class="paramtype">QVariantList &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills QVariantList with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">list</td><td>QVariantList </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#aa1595196bd3fd72c9ee95c6c0a82f711" title="Returns QVariantList filled with values fetched from current result row. ">QueryResult::toList</a> </dd></dl>

</div>
</div>
<a id="a0f79c838a9fcd4a5d48e61abc79612e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f79c838a9fcd4a5d48e61abc79612e9">&#9670;&nbsp;</a></span>fetchMap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchMap </td>
          <td>(</td>
          <td class="paramtype">QVariantMap &amp;&#160;</td>
          <td class="paramname"><em>map</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills QVariantMap with values fetched from current result row. Key is QString (result column name) and value is QVariant value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">map</td><td>QVariantMap </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a023bd84f7010368d616d7dbb1b399a06" title="Returns QVariantMap filled with values fetched from current result row. Key is QString (result column...">QueryResult::toMap</a> </dd></dl>

</div>
</div>
<a id="a79a40fde15ca3ceaa4f0c7b8ba649558"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79a40fde15ca3ceaa4f0c7b8ba649558">&#9670;&nbsp;</a></span>fetchObject()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchObject </td>
          <td>(</td>
          <td class="paramtype">QObject &amp;&#160;</td>
          <td class="paramname"><em>object</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills Q_OBJECT object properties with data fetched from current result row. </p>
<p>Qt Meta-Object System used. Only writable properties can be filled.</p>
<p>C++ class fields (properties) will be mapped on SQL result table by Q_PROPERTY member names. For example, if Q_OBJECT class contains Q_PROPERTY named "e" but SELECT query defines no "e" column, object property "e" not affected by the method.</p>
<div class="fragment"><div class="line"><span class="keyword">class </span>TestObject : <span class="keyword">public</span> QObject</div><div class="line">{</div><div class="line">   Q_OBJECT</div><div class="line"></div><div class="line">   <span class="comment">//property &quot;a&quot; will be filled with &quot;a&quot; column of the Select SQL query result</span></div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> a MEMBER a)</div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> b MEMBER b)</div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> c MEMBER c)</div><div class="line">   Q_PROPERTY(QString d MEMBER d)</div><div class="line"></div><div class="line">   <span class="comment">//property e will be ignored in the example because there is no e field in the Select SQL query result</span></div><div class="line">   Q_PROPERTY(<span class="keywordtype">int</span> e MEMBER e)</div><div class="line"></div><div class="line"><span class="keyword">private</span>:</div><div class="line">   <span class="keywordtype">int</span> a;</div><div class="line">   <span class="keywordtype">int</span> b;</div><div class="line">   <span class="keywordtype">int</span> c;</div><div class="line">   QString d;</div><div class="line">   <span class="keywordtype">int</span> e;</div><div class="line">};</div><div class="line"></div><div class="line"><span class="keywordtype">void</span> test()</div><div class="line">{</div><div class="line">   <a class="code" href="class_transaction.htm">Transaction</a> t;</div><div class="line">   <a class="code" href="class_query_result.htm">QueryResult</a> res = t.<a class="code" href="class_database.htm#a05c1ac255cdba9781f8bf306801bca70">execQuery</a>(<span class="stringliteral">&quot;SELECT a, b, c, d FROM table&quot;</span>);</div><div class="line"></div><div class="line">   <span class="keywordflow">while</span> (res.<a class="code" href="class_query_result.htm#a1c756382c20c126979b28715d529c054">next</a>())</div><div class="line">   {</div><div class="line">      <span class="comment">//TestObject instance (Q_OBJECT class)</span></div><div class="line">      TestObject testRow;</div><div class="line">      res.<a class="code" href="class_query_result.htm#a79a40fde15ca3ceaa4f0c7b8ba649558">fetchObject</a>(testRow);</div><div class="line">   }</div><div class="line">}</div></div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">object</td><td>Q_OBJECT object reference </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af49aaa8a26876c7a095326c8b2d5ba6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af49aaa8a26876c7a095326c8b2d5ba6a">&#9670;&nbsp;</a></span>fetchStringList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchStringList </td>
          <td>(</td>
          <td class="paramtype">QStringList &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills QStringList with values fetched from current result row. SQL values converted to QString with QVariant::toString() method. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">list</td><td>QStringList </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a6831da3d942ccf741984f72d1d2eb57d" title="Returns QStringList filled with values fetched from current result row. SQL values converted to QStri...">QueryResult::toStringList</a> </dd></dl>

</div>
</div>
<a id="a0d6642a5d017d6f99e0f5cb06d6740ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d6642a5d017d6f99e0f5cb06d6740ca">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[1/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<p>The method has a variable number of parameters, which allows filling the list of variables with values from the current record in single call.</p>
<p>Overloaded <em>EasyQtSql::fetchVars</em> methods performs the corresponding type conversion with QVariant::to*() methods.</p>
<p>Supported parameter types: <em>int</em>, <em>double</em>, <em>bool</em>, <em>QString</em>, <em>QDate</em>, <em>QDateTime</em>, <em>QTime</em>, <em>QByteArray</em>, <em>QVariant</em>.</p>
<p>Variables of different types can be mixed.</p>
<div class="fragment"><div class="line"><a class="code" href="class_transaction.htm">Transaction</a> t;</div><div class="line"><a class="code" href="class_query_result.htm">QueryResult</a> res = t.<a class="code" href="class_database.htm#a05c1ac255cdba9781f8bf306801bca70">execQuery</a>(<span class="stringliteral">&quot;SELECT a, b, c, d FROM table&quot;</span>);</div><div class="line"></div><div class="line"><span class="keywordflow">while</span> (res.<a class="code" href="class_query_result.htm#a1c756382c20c126979b28715d529c054">next</a>())</div><div class="line">{</div><div class="line">   <span class="keywordtype">int</span> a;</div><div class="line">   <span class="keywordtype">bool</span> b;</div><div class="line">   QString c;</div><div class="line">   QDateTime d;</div><div class="line"></div><div class="line">   res.<a class="code" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca">fetchVars</a>(a, b, c, d);</div><div class="line">}</div></div><!-- fragment --><dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> , <a class="el" href="class_query_result.htm#ac77eccf0a47750e309e11e7e66bb2d8a" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(double&amp;) const</a> , <a class="el" href="class_query_result.htm#a1a43faec4675b58bd0506a4de7c3976f" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QString&amp;) const</a> , <a class="el" href="class_query_result.htm#af49ff273eb3efd184ca423df846ba507" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(bool&amp;) const</a> , <a class="el" href="class_query_result.htm#a50a5fa4850f774f301ed88a488a44726" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QDate&amp;) const</a> , <a class="el" href="class_query_result.htm#a91d15081bc1d6eccefe089f4948438cb" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QDateTime&amp;) const</a> , <a class="el" href="class_query_result.htm#af2870c71cd1b750c8151a7b4420903fa" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QTime&amp;) const</a> , <a class="el" href="class_query_result.htm#aaeb262416e472885dc6a3c7c3c7c3306" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QByteArray&amp;) const</a> , <a class="el" href="class_query_result.htm#a8c17bed4e4380137912a2baba19e5a30" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(QVariant&amp;) const</a> </dd></dl>

</div>
</div>
<a id="ac77eccf0a47750e309e11e7e66bb2d8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac77eccf0a47750e309e11e7e66bb2d8a">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[2/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a1a43faec4675b58bd0506a4de7c3976f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a43faec4675b58bd0506a4de7c3976f">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[3/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QString &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="af49ff273eb3efd184ca423df846ba507"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af49ff273eb3efd184ca423df846ba507">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[4/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a50a5fa4850f774f301ed88a488a44726"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50a5fa4850f774f301ed88a488a44726">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[5/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QDate &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a91d15081bc1d6eccefe089f4948438cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91d15081bc1d6eccefe089f4948438cb">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[6/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QDateTime &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="af2870c71cd1b750c8151a7b4420903fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2870c71cd1b750c8151a7b4420903fa">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[7/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QTime &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="aaeb262416e472885dc6a3c7c3c7c3306"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaeb262416e472885dc6a3c7c3c7c3306">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[8/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QByteArray &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a8c17bed4e4380137912a2baba19e5a30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c17bed4e4380137912a2baba19e5a30">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[9/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QVariant &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assigns a variable the value from the current record. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a0d6642a5d017d6f99e0f5cb06d6740ca" title="Assigns a variable the value from the current record. ">QueryResult::fetchVars(int&amp;) const</a> </dd></dl>

</div>
</div>
<a id="a5421dce74a177933675ede65a68972a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5421dce74a177933675ede65a68972a0">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[10/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b82a02ab7a45f1092e93d56a87dc67b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b82a02ab7a45f1092e93d56a87dc67b">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[11/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acf30d6c095e00eb7b1bc942563597d4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf30d6c095e00eb7b1bc942563597d4b">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[12/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QString &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa62c42135a62658a7e56426a024d0146"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa62c42135a62658a7e56426a024d0146">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[13/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aadabff776f939dd7c3895318396ae59e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadabff776f939dd7c3895318396ae59e">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[14/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QDate &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aab68396b876b689f21109301cf350ee3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab68396b876b689f21109301cf350ee3">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[15/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QDateTime &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a462dc42f451155eca3b56b9239cf8535"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a462dc42f451155eca3b56b9239cf8535">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[16/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QTime &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5efedd7a6e170ddeaddbac5428951085"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5efedd7a6e170ddeaddbac5428951085">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[17/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QByteArray &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0a381517b5fa64a68e4d10972b0ceefc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a381517b5fa64a68e4d10972b0ceefc">&#9670;&nbsp;</a></span>fetchVars() <span class="overload">[18/18]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Rest&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVars </td>
          <td>(</td>
          <td class="paramtype">QVariant &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Rest &amp;...&#160;</td>
          <td class="paramname"><em>rest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad111370ab183d4d6a1522123c03f183d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad111370ab183d4d6a1522123c03f183d">&#9670;&nbsp;</a></span>fetchVector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void QueryResult::fetchVector </td>
          <td>(</td>
          <td class="paramtype">QVector&lt; QVariant &gt; &amp;&#160;</td>
          <td class="paramname"><em>vector</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills QVector&lt;QVariant&gt; with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">vector</td><td>QVector&lt;QVariant&gt; </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a9bebffe22ed2f023ef7c9540aa9164ea" title="Returns QVector&lt;QVariant&gt; filled with values fetched from current result row. SQL values not converte...">QueryResult::toVector</a> </dd></dl>

</div>
</div>
<a id="a406abd3501b2f3d89bf6bb7e5e8cd7c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a406abd3501b2f3d89bf6bb7e5e8cd7c3">&#9670;&nbsp;</a></span>first()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool QueryResult::first </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the first record in the result, if available, and positions the query on the retrieved record. </p>
<p>Wrapper over QSqlQuery::first() </p>

</div>
</div>
<a id="a46b374177ab23d8f9d7dc9366eb57655"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46b374177ab23d8f9d7dc9366eb57655">&#9670;&nbsp;</a></span>isActive()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool QueryResult::isActive </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if the query is active. An active QSqlQuery is one that has been exec()'d successfully but not yet finished with. </p>
<p>Wrapper over QSqlQuery::isActive() </p>

</div>
</div>
<a id="a5b6ef75a4da642c0c467d0110ce1701a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b6ef75a4da642c0c467d0110ce1701a">&#9670;&nbsp;</a></span>isForwardOnly()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool QueryResult::isForwardOnly </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if you can only scroll forward through a result set; otherwise returns false. </p>
<p>Wrapper over QSqlQuery::isForwardOnly() </p>

</div>
</div>
<a id="ae9ec64a1171aba3f7cef8b081c8158be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9ec64a1171aba3f7cef8b081c8158be">&#9670;&nbsp;</a></span>isValid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool QueryResult::isValid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if the query is currently positioned on a valid record; otherwise returns false. </p>
<p>Wrapper over QSqlQuery::isValid() </p>

</div>
</div>
<a id="a0e5a5d108da1d03b0f624e18330a10f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e5a5d108da1d03b0f624e18330a10f5">&#9670;&nbsp;</a></span>last()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool QueryResult::last </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the last record in the result, if available, and positions the query on the retrieved record. </p>
<p>Wrapper over QSqlQuery::last() </p>

</div>
</div>
<a id="ac56dbe38b558a9e55591f645d50eacde"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac56dbe38b558a9e55591f645d50eacde">&#9670;&nbsp;</a></span>lastError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QSqlError QueryResult::lastError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns error information about the last error (if any) that occurred with this query. </p>
<p>Wrapper over QSqlQuery::lastError() </p>

</div>
</div>
<a id="af86eb1e97db39a70d504389494e2b329"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af86eb1e97db39a70d504389494e2b329">&#9670;&nbsp;</a></span>lastQuery()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QString QueryResult::lastQuery </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the text of the current query being used, or an empty string if there is no current query text. </p>
<p>Wrapper over QSqlQuery::lastQuery() </p>

</div>
</div>
<a id="a1c756382c20c126979b28715d529c054"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c756382c20c126979b28715d529c054">&#9670;&nbsp;</a></span>next()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool QueryResult::next </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the next record in the result, if available, and positions the query on the retrieved record. </p>
<p>Wrapper over QSqlQuery::next() </p>

</div>
</div>
<a id="a9ed922784c015b27b7fb53fafb10b391"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ed922784c015b27b7fb53fafb10b391">&#9670;&nbsp;</a></span>nextResult()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool QueryResult::nextResult </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Discards the current result set and navigates to the next if available (if database is capable of returning multiple result sets) </p>
<p>Wrapper over QSqlQuery::nextResult() </p>

</div>
</div>
<a id="a26baf17cd661ec312918f660ac9e4b1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26baf17cd661ec312918f660ac9e4b1a">&#9670;&nbsp;</a></span>numRowsAffected()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int QueryResult::numRowsAffected </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of rows affected by the result's SQL statement, or -1 if it cannot be determined. </p>
<p>Wrapper over QSqlQuery::numRowsAffected() </p>

</div>
</div>
<a id="a22bd0f401bbcc203adb03b874ef2c5d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22bd0f401bbcc203adb03b874ef2c5d8">&#9670;&nbsp;</a></span>parseToIntVector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVector&lt;int&gt; QueryResult::parseToIntVector </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>base</em> = <code>10</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>skipNullValues</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns vector of (optionally parsed) integer values from currently active result row. </p>
<p>Parsing with specified base will be performed if type of selected database field is String (varchar/text). Not successfully parsed string values are ignored.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">base</td><td>Number base to parse int values from SQL string values. </td></tr>
    <tr><td class="paramname">skipNullValues</td><td>Skip SQL NULL values. Resulting int value is 0 if skipNullValues = false. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9325bfaca721378e6bafa50fd7839197"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9325bfaca721378e6bafa50fd7839197">&#9670;&nbsp;</a></span>previous()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool QueryResult::previous </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the previous record in the result, if available, and positions the query on the retrieved record. </p>
<p>Wrapper over QSqlQuery::previous() </p>

</div>
</div>
<a id="a5e3b49cb821efecac406606d9e3adb13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e3b49cb821efecac406606d9e3adb13">&#9670;&nbsp;</a></span>scalar() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T QueryResult::scalar </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns scalar value converted to type T (the value of the first column of the current row) </p>

</div>
</div>
<a id="abd683e71de31fbcf8e74e22249597322"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd683e71de31fbcf8e74e22249597322">&#9670;&nbsp;</a></span>scalar() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariant QueryResult::scalar </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns scalar value (the value of the first column of the current row) </p>

</div>
</div>
<a id="aff65a998f1c8be8c1dd630438a820158"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff65a998f1c8be8c1dd630438a820158">&#9670;&nbsp;</a></span>seek()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool QueryResult::seek </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>relative</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the record at position index, if available, and positions the query on the retrieved record. </p>
<p>Wrapper over QSqlQuery::seek() </p>

</div>
</div>
<a id="ad46ba52de7f43f45c19d4b7eecabca4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad46ba52de7f43f45c19d4b7eecabca4b">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int QueryResult::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the size of the result (number of rows returned), or -1 if the size cannot be determined or if the database does not support reporting information about query sizes. </p>
<p>Wrapper over QSqlQuery::size() </p>

</div>
</div>
<a id="aa1595196bd3fd72c9ee95c6c0a82f711"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1595196bd3fd72c9ee95c6c0a82f711">&#9670;&nbsp;</a></span>toList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariantList QueryResult::toList </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns QVariantList filled with values fetched from current result row. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#af62abbe3a59c25163c90e4a5fec632c7" title="Fills QVariantList with values fetched from current result row. SQL values not converted: QSqlQuery::...">QueryResult::fetchList</a> </dd></dl>

</div>
</div>
<a id="a023bd84f7010368d616d7dbb1b399a06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a023bd84f7010368d616d7dbb1b399a06">&#9670;&nbsp;</a></span>toMap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariantMap QueryResult::toMap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns QVariantMap filled with values fetched from current result row. Key is QString (result column name) and value is QVariant value. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a0f79c838a9fcd4a5d48e61abc79612e9" title="Fills QVariantMap with values fetched from current result row. Key is QString (result column name) an...">QueryResult::fetchMap</a> </dd></dl>

</div>
</div>
<a id="a6831da3d942ccf741984f72d1d2eb57d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6831da3d942ccf741984f72d1d2eb57d">&#9670;&nbsp;</a></span>toStringList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QStringList QueryResult::toStringList </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns QStringList filled with values fetched from current result row. SQL values converted to QString with QVariant::toString() method. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#af49aaa8a26876c7a095326c8b2d5ba6a" title="Fills QStringList with values fetched from current result row. SQL values converted to QString with Q...">QueryResult::fetchStringList()</a> </dd></dl>

</div>
</div>
<a id="a9bebffe22ed2f023ef7c9540aa9164ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bebffe22ed2f023ef7c9540aa9164ea">&#9670;&nbsp;</a></span>toVector() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVector&lt;QVariant&gt; QueryResult::toVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns QVector&lt;QVariant&gt; filled with values fetched from current result row. SQL values not converted: QSqlQuery::value() return value used. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#ad111370ab183d4d6a1522123c03f183d" title="Fills QVector&lt;QVariant&gt; with values fetched from current result row. SQL values not converted: QSqlQu...">QueryResult::fetchVector</a> </dd></dl>

</div>
</div>
<a id="aa4f8c874ffb9e6b1285a69322aec61ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4f8c874ffb9e6b1285a69322aec61ea">&#9670;&nbsp;</a></span>toVector() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVector&lt;T&gt; QueryResult::toVector </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>skipNullValues</em> = <code>false</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns QVector&lt;T&gt; filled with values fetched from current result row. SQL values converted with QVariant::value&lt;T&gt;(). QVector::canConvert&lt;T&gt;() method used for convertability check. Non-convertable values skipped. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">skipNullValues</td><td>Skip SQL NULL values. Resulting value is default value if skipNullValues = false. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_query_result.htm#a9bebffe22ed2f023ef7c9540aa9164ea" title="Returns QVector&lt;QVariant&gt; filled with values fetched from current result row. SQL values not converte...">QueryResult::toVector</a> </dd></dl>

</div>
</div>
<a id="afcffce24fb54a5b94c74d304a36fc317"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcffce24fb54a5b94c74d304a36fc317">&#9670;&nbsp;</a></span>unwrappedQuery()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QSqlQuery&amp; QueryResult::unwrappedQuery </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns reference on wrapped QSqlQuery. </p>

</div>
</div>
<a id="a74350f3ed705c8768bd748fe942438de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74350f3ed705c8768bd748fe942438de">&#9670;&nbsp;</a></span>value() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariant QueryResult::value </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>column</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value of field index in the current record. </p>
<p>Wrapper over QSqlQuery::value() </p>

</div>
</div>
<a id="a90ec24d07326aaa31e5372cfa377c985"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90ec24d07326aaa31e5372cfa377c985">&#9670;&nbsp;</a></span>value() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QVariant QueryResult::value </td>
          <td>(</td>
          <td class="paramtype">const QString &amp;&#160;</td>
          <td class="paramname"><em>colName</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value of the field called name in the current record. If field name does not exist an invalid variant is returned. </p>
<p>Wrapper over QSqlQuery::value() </p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a6efef52d7a939622bbc934ff6b90ffe0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6efef52d7a939622bbc934ff6b90ffe0">&#9670;&nbsp;</a></span>Database</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_database.htm">Database</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a86948d67f912f2e3e6d1a2674cd0814e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86948d67f912f2e3e6d1a2674cd0814e">&#9670;&nbsp;</a></span>PreparedQuery</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_prepared_query.htm">PreparedQuery</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a49982aa325e19f0956d42fde9132caa2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49982aa325e19f0956d42fde9132caa2">&#9670;&nbsp;</a></span>Transaction</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_transaction.htm">Transaction</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>EasyQtSql/<a class="el" href="_easy_qt_sql___query_result_8h_source.htm">EasyQtSql_QueryResult.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="class_query_result.htm">QueryResult</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.14 </li>
  </ul>
</div>
</body>
</html>
